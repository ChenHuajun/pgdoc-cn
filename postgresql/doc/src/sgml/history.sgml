<!-- doc/src/sgml/history.sgml -->

<sect1 id="history">
<!--
 <title>A Brief History of <productname>PostgreSQL</productname></title>
-->
<title><productname>PostgreSQL</productname>简史</title>
 <indexterm zone="history">
  <primary>history</primary>
  <secondary>of PostgreSQL</secondary>
 </indexterm>
<!--
 <para>
  The object-relational database management system now known as
  <productname>PostgreSQL</productname> is derived from the
  <productname>POSTGRES</productname> package written at the
  University of California at Berkeley.  With over two decades of
  development behind it, <productname>PostgreSQL</productname> is now
  the most advanced open-source database available anywhere.
 </para>
 -->
 <para>
现在被称为<productname>PostgreSQL</productname>的对象-关系型数据库管理系统是从美国加州大学伯克利
分校编写的<productname>POSTGRES</productname>软件包发展而来的。经过二十几年的发展，<productname>PostgreSQL</productname>
是目前世界上可以获得的最先进的开放源码数据库系统。 
 </para>

 <sect2 id="history-berkeley">
 <!--
  <title>The Berkeley <productname>POSTGRES</productname> Project</title>
 -->
  <title>Berkeley 的<productname>POSTGRES</productname>项目</title>
  <indexterm zone="history-berkeley">
   <primary>POSTGRES</primary>
  </indexterm>
<!--
  <para>
   The <productname>POSTGRES</productname> project, led by Professor
   Michael Stonebraker, was sponsored by the Defense Advanced Research
   Projects Agency (<acronym>DARPA</acronym>), the Army Research
   Office (<acronym>ARO</acronym>), the National Science Foundation
   (<acronym>NSF</acronym>), and ESL, Inc.  The implementation of
   <productname>POSTGRES</productname> began in 1986.  The initial
   concepts for the system were presented in <xref linkend="STON86">,
   and the definition of the initial data model appeared in <xref
   linkend="ROWE87">.  The design of the rule system at that time was
   described in <xref linkend="STON87a">.  The rationale and
   architecture of the storage manager were detailed in <xref
   linkend="STON87b">.
  </para>
  -->
 <para>
 Michael Stonebraker领导的<productname>POSTGRES</productname>项目
是由防务高级研究项目局(<acronym>DARPA</acronym>)、陆军研究办公室(<acronym>ARO</acronym>)、国家科学基金
(<acronym>NSF</acronym>)、ESL公司共同赞助的。<productname>POSTGRES</productname>的实现始于1986年，该系统最初的
概念详见<xref linkend="STON86">，最早的数据模型定义见
<xref linkend="ROWE87">。当时的规则系统设计在<xref linkend="STON87a">
里描述。存储管理器的理论基础和体系结构在 <xref linkend="STON87b">里有详细描述。
  </para>
 <!-- 
  <para>
   <productname>POSTGRES</productname> has undergone several major
   releases since then.  The first <quote>demoware</quote> system
   became operational in 1987 and was shown at the 1988
   <acronym>ACM-SIGMOD</acronym> Conference.  Version 1, described in
   <xref linkend="STON90a">, was released to a few external users in
   June 1989.  In response to a critique of the first rule system
   (<xref linkend="STON89">), the rule system was redesigned (<xref
   linkend="STON90b">), and Version 2 was released in June 1990 with
   the new rule system.  Version 3 appeared in 1991 and added support
   for multiple storage managers, an improved query executor, and a
   rewritten rule system.  For the most part, subsequent releases
   until <productname>Postgres95</productname> (see below) focused on
   portability and reliability.
  </para>
 -->
 <para>
 从那以后，<productname>POSTGRES</productname>经历了几次主要的
 版本更新。第一个<quote>演示性</quote>系统在1987年便可使用了，
 并且在1988年的<acronym>ACM-SIGMOD</acronym>大会上展出。在1989年
 6月发布了版本1(在<xref linkend="STON90a">里有描述)给一些外部的用
 户使用。为了回应用户对第一个规则系统的批评
 (<xref linkend="STON89"> )，我们重新设计了规则系统
 (<xref linkend="STON90b">)，并在1990年6月发布了使用新规则系统的
 版本2。版本3在1991年出现，增加了多存储管理器的支持，并且改进了
 查询执行器，重新编写了规则系统。从那以后，随后的版本直到
 <productname>Postgres95</productname>发布前(见下文)，工作都集中
 在移植性和可靠性上。
  </para>
  <!--
  <para>
   <productname>POSTGRES</productname> has been used to implement many
   different research and production applications.  These include: a
   financial data analysis system, a jet engine performance monitoring
   package, an asteroid tracking database, a medical information
   database, and several geographic information systems.
   <productname>POSTGRES</productname> has also been used as an
   educational tool at several universities.  Finally, Illustra
   Information Technologies (later merged into
   <ulink url="http://www.informix.com/"><productname>Informix</productname></ulink>,
   which is now owned by <ulink
   url="http://www.ibm.com/">IBM</ulink>) picked up the code and
   commercialized it.  In late 1992,
   <productname>POSTGRES</productname> became the primary data manager
   for the
   <ulink url="http://meteora.ucsd.edu/s2k/s2k_home.html">
   Sequoia 2000 scientific computing project</ulink>.
  </para>
  -->
<para>
 <productname>POSTGRES</productname>已经在许多研究或实际的应用中
 得到了应用。这些应用包括：一个财务数据分析系统、一个喷气引擎
 性能监控软件包、一个小行星跟踪数据库、一个医疗信息数据库和一些
 地理信息系统。<productname>POSTGRES</productname>还被许多大学用
 于教学用途。最后，Illustra Information Technologies(后来并入
 <ulink url="http://www.informix.com/"><productname>Informix
 </productname></ulink>，而它现在属于
 <ulink url="http://www.ibm.com/">IBM</ulink>)拿到代码并使之
 商业化。在1992年末<productname>POSTGRES</productname>成为
 <ulink url="http://meteora.ucsd.edu/s2k/s2k_home.html">Sequoia 
 2000 scientific computing project</ulink>的首要数据管理器。
  </para>
  <!--
  <para>
   The size of the external user community nearly doubled during 1993.
   It became increasingly obvious that maintenance of the prototype
   code and support was taking up large amounts of time that should
   have been devoted to database research.  In an effort to reduce
   this support burden, the Berkeley
   <productname>POSTGRES</productname> project officially ended with
   Version 4.2.
  </para>
  -->
  <para>
 到了1993年，外部用户的数量几乎翻番。随着用户的增加，用于源代
 码维护的时间日益增加，以至占用了太多本应该用于数据库研究的时
 间，为了减少支持的负担，伯克利的<productname>POSTGRES
 </productname>项目在版本4.2时正式终止。
  </para>
 </sect2>

 <sect2 id="history-postgres95">
  <title><productname>Postgres95</productname></title>

  <indexterm zone="history-postgres95">
   <primary>Postgres95</primary>
  </indexterm>
<!--
  <para>
   In 1994, Andrew Yu and Jolly Chen added an SQL language interpreter
   to <productname>POSTGRES</productname>.  Under a new name,
   <productname>Postgres95</productname> was subsequently released to
   the web to find its own way in the world as an open-source
   descendant of the original <productname>POSTGRES</productname>
   Berkeley code.
  </para>
-->
 <para>
 1994年，Andrew Yu和Jolly Chen向<productname>POSTGRES</productname>
 中增加了SQL语言的解释器，并随后将<productname>Postgres95
 </productname>的源代码发布到互联网上供大家使用，从而成为一个开放
 源码的原伯克利<productname>POSTGRES</productname>的继承者。
  </para>
  <!--
  <para>
   <productname>Postgres95</productname> code was completely ANSI C
   and trimmed in size by 25%. Many internal changes improved
   performance and
   maintainability. <productname>Postgres95</productname> release
   1.0.x ran about 30-50% faster on the Wisconsin Benchmark compared
   to <productname>POSTGRES</productname>, Version 4.2.  Apart from
   bug fixes, the following were the major enhancements:
-->
<para>
 <productname>Postgres95</productname>所有源代码都是完全的ANSI C，
 而且代码量减少了25%，并且有许多内部修改以利于提高性能和代码的
 可维护性。<productname>Postgres95</productname>版本1.0.x在进行
 Wisconsin Benchmark测试时大概比<productname>POSTGRES</productname>
 v4.2快 30%-50%。除了修正了一些错误，下面的是一些主要改进： 

   <itemizedlist>
    <listitem>
<!--
     <para>
      The query language PostQUEL was replaced with
      <acronym>SQL</acronym> (implemented in the server).  (Interface
      library <link linkend="libpq">libpq</link> was named after PostQUEL.)
      Subqueries
      were not supported until <productname>PostgreSQL</productname>
      (see below), but they could be imitated in
      <productname>Postgres95</productname> with user-defined
      <acronym>SQL</acronym> functions. Aggregate functions were
      re-implemented.  Support for the <literal>GROUP BY</literal>
      query clause was also added.
     </para>
 -->
<para>
      原来的查询语言PostQUEL被<acronym>SQL</acronym>取代(在服务器端实现)。
  (接口库<link linkend="libpq">libpq</link>是以PostQUEL来命名的。)
  在<productname>PostgreSQL</productname>之前还不支持子查询(见下文)，但
  这个功能可以在<productname>Postgres95</productname>里面由用户定义的
  <acronym>SQL</acronym>函数实现，重新实现了聚集，同时还增加了对
  <literal>GROUP BY</literal>查询子句的支持。
     </para>
    </listitem>

    <listitem>
<!--
     <para>
      A new program
      (<application>psql</application>) was provided for interactive
      SQL queries, which used <acronym>GNU</acronym>
      <application>Readline</application>.  This largely superseded
      the old <application>monitor</> program.
     </para>
 -->
 <para>
 新增加了利用<acronym>GNU</acronym> <application>Readline</application>进
 行交互SQL查询的程序(<application>psql</application>)。这个程序很大程度上取代了
 老的<application>monitor</>程序。
 </para>
    </listitem>

    <listitem>
<!--
     <para>
      A new front-end library, <filename>libpgtcl</filename>,
      supported <acronym>Tcl</acronym>-based clients.  A sample shell,
      <command>pgtclsh</command>, provided new Tcl commands to
      interface <application>Tcl</application> programs with the
      <productname>Postgres95</productname> server.
     </para>
 -->
 <para>
      增加了新的前端库(<filename>libpgtcl</filename>)，用以支持
  以<acronym>Tcl</acronym>为基础的客户端。一个样本shell
  (<command>pgtclsh</command>)，提供了新的Tcl命令用于
  <application>Tcl</application>程序和<productname>Postgres95
  </productname>后端之间的交互。
     </para>
    </listitem>

    <listitem>
<!--
     <para>
      The large-object interface was overhauled. The inversion large
      objects were the only mechanism for storing large objects.  (The
      inversion file system was removed.)
     </para>
 -->
 <para>
     彻底重写了大对象的接口，将大对象倒转(inversion)作为存储大对象
 的唯一机制（去掉了倒转(inversion)文件系统）。
     </para>
    </listitem>

    <listitem>
<!--
     <para>
      The instance-level rule system was removed.  Rules were still
      available as rewrite rules.
     </para>
 -->
<para>
     去掉了实例级的规则系统，但我们仍然可以通过重写规则来使用规则。
     </para> 
    </listitem>

    <listitem>
<!--
     <para>
      A short tutorial introducing regular <acronym>SQL</acronym>
      features as well as those of
      <productname>Postgres95</productname> was distributed with the
      source code
     </para>
 -->
<para>
      在发布的源码中增加了一个简短的常用<acronym>SQL</acronym>和
  <productname>Postgres95</productname>特有的SQL特性的教程。
     </para>
    </listitem>

    <listitem>
<!--
     <para>
      <acronym>GNU</acronym> make (instead of <acronym>BSD</acronym>
      make) was used for the build.  Also,
      <productname>Postgres95</productname> could be compiled with an
      unpatched <productname>GCC</productname> (data alignment of
      doubles was fixed).
     </para>
 -->
 <para>
      用<acronym>GNU</acronym> make取代了<acronym>BSD</acronym> make用于编译。
  <productname>Postgres95</productname>可以使用不加补丁的
  <productname>GCC</productname>进行编译(修正了偶数字节数据的对齐问题)。
     </para>
    </listitem>
   </itemizedlist>
  </para>
 </sect2>

 <sect2>
 
  <title><productname>PostgreSQL</productname></title>
<!--
  <para>
   By 1996, it became clear that the name <quote>Postgres95</quote>
   would not stand the test of time. We chose a new name,
   <productname>PostgreSQL</productname>, to reflect the relationship
   between the original <productname>POSTGRES</productname> and the
   more recent versions with <acronym>SQL</acronym> capability.  At
   the same time, we set the version numbering to start at 6.0,
   putting the numbers back into the sequence originally begun by the
   Berkeley <productname>POSTGRES</productname> project.
  </para>
-->
<para>
到了1996年，我们很明显的看出<quote>Postgres95</quote>这个名字已经经不起
时间的考验了。于是我们起了一个新名字<productname>PostgreSQL</productname>
用于反映最初的<productname>POSTGRES</productname>和最新的使用<acronym>SQL
</acronym>的版本之间的关系。同时版本号也重新从6.0开始，将版本号放回到最
初的由伯克利<productname>POSTGRES</productname>项目开始的顺序中。
</para>
<!--
  <para>
   Many people continue to refer to
   <productname>PostgreSQL</productname> as <quote>Postgres</quote>
   (now rarely in all capital letters) because of tradition or because
   it is easier to pronounce.  This usage is widely accepted as a
   nickname or alias.
  </para>
  -->
 <para>
许多人出于习惯或者发音简单的原因，将<productname>PostgreSQL</productname>
称为<quote>Postgres</quote>（现在很少全部用大写字母），这种称法被当做绰号或者别名而广泛接受。
 </para>
 
<!--
  <para>
   The emphasis during development of
   <productname>Postgres95</productname> was on identifying and
   understanding existing problems in the server code.  With
   <productname>PostgreSQL</productname>, the emphasis has shifted to
   augmenting features and capabilities, although work continues in
   all areas.
  </para>
  -->
  <para>
   <productname>Postgres95</productname>版本的开发重点放在识别和理解服务器端
   代码中已有的问题上。<productname>PostgreSQL</productname>开发重点转到了一些
   有争议的特性和功能上面，当然各个方面的工作同时都在进行。 
  </para>
<!--
  <para>
   Details about what has happened in <productname>PostgreSQL</> since
   then can be found in <xref linkend="release">.
  </para>
  -->
  <para>
     自那以来，<productname>PostgreSQL</>发生的变化可以在<xref linkend="release">里面找到。 
  </para>
 </sect2>
</sect1>
