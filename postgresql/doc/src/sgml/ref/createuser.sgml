<!--
doc/src/sgml/ref/createuser.sgml
PostgreSQL documentation
-->

<refentry id="APP-CREATEUSER">
 <refmeta>
  <refentrytitle><application>createuser</application></refentrytitle>
  <manvolnum>1</manvolnum>
  <refmiscinfo>Application</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>createuser</refname>
  <refpurpose>创建一个新的<productname>PostgreSQL</productname>用户帐户</refpurpose>
 </refnamediv>

 <indexterm zone="app-createuser">
  <primary>createuser</primary>
 </indexterm>

 <refsynopsisdiv>
  <cmdsynopsis>
   <command>createuser</command>
   <arg rep="repeat"><replaceable>connection-option</replaceable></arg>
   <arg rep="repeat"><replaceable>option</replaceable></arg>
   <arg choice="opt"><replaceable>username</replaceable></arg>
  </cmdsynopsis>
 </refsynopsisdiv>


 <refsect1>
  <title>描述</title>
  <para>
   <application>createuser</application>创建一个新的<productname>PostgreSQL</productname>
   用户（更准确地说是一个角色）。
   只有超级用户和具有<literal>CREATEROLE</>权限的用户可以创建新的用户。
   因此<application>createuser</application>必须由超级用户或者是具有
   <literal>CREATEROLE</>权限的用户执行。
  </para>

  <para>
   如果你想创建一个新的超级用户，你必须以超级用户身份连接，
   而不仅仅是一个有<literal>CREATEROLE</>权限的用户。
   成为超级用户就意味着将在数据库里绕开所有访问权限检查，因此，不要轻易授予超级用户权限。
  </para>

  <para>
   <application>createuser</application>是对
   <acronym>SQL</acronym>命令<xref linkend="SQL-CREATEROLE">的封装。
    因此，用哪种方法创建的用户都一样。
  </para>

 </refsect1>


 <refsect1>
  <title>选项</title>

  <para>
   <application>createuser</>接受下列命令行参数：

    <variablelist>
     <varlistentry>
      <term><replaceable class="parameter">username</replaceable></term>
      <listitem>
       <para>
        指定要创建的<productname>PostgreSQL</productname>用户名称。
        此名称必须与本
        <productname>PostgreSQL</productname>安装的所有现有角色不同。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-c <replaceable class="parameter">number</replaceable></></term>
      <term><option>--connection-limit=<replaceable class="parameter">number</replaceable></></term>
      <listitem>
       <para>
        为新用户设置最大数目的连接限制。缺省为无限制。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-d</></term>
      <term><option>--createdb</></term>
      <listitem>
       <para>
        允许该新用户创建数据库。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-D</></term>
      <term><option>--no-createdb</></term>
      <listitem>
       <para>
        禁止该新用户创建数据库。这是缺省（设置）。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-e</></term>
      <term><option>--echo</></term>
      <listitem>
       <para>
        回显<application>createuser</application>生成并发送到服务端的命令。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-E</></term>
      <term><option>--encrypted</></term>
      <listitem>
       <para>
        加密存储在数据库中的用户的密码。
        如果没有指定，使用缺省设置。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-i</></term>
      <term><option>--inherit</></term>
      <listitem>
       <para>
        该新角色将自动继承其所属角色组的权限。这是缺省（设置）。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-I</></term>
      <term><option>--no-inherit</></term>
      <listitem>
       <para>
        该新角色将不会自动继承他所属角色组的权限。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--interactive</></term>
      <listitem>
       <para>
        若没有在命令行上指定用户名，提示缺少用户名。并且
        <option>-d</option>/<option>-D</option>,
        <option>-r</option>/<option>-R</option>,
        <option>-s</option>/<option>-S</option>选项任何属性没有在命令行指定，也会提示缺少属性（而不会使用缺省值）。
        （PostgreSQL 9.1以前这是缺省的设置。）
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-l</></term>
      <term><option>--login</></term>
      <listitem>
       <para>
        该新用户将允许登录（也就是说，用户名可以作为初始会话的用户标识符）。这是缺省（设置）。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-L</></term>
      <term><option>--no-login</></term>
      <listitem>
       <para>
        该新用户将不允许登录。
        （作为管理数据库权限的手段，（设置）没有登录权限的角色仍然是有必要的。）
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-N</></term>
      <term><option>--unencrypted</></term>
      <listitem>
       <para>
        不加密存储在数据库中的用户的密码。
        如果没有指定，使用缺省设置
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-P</></term>
      <term><option>--pwprompt</></term>
      <listitem>
       <para>
       如果给出（此选项），<application>createuser</application>将提示输入新用户的密码。
       如果不准备使用密码认证方式，那么没必要这么做。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-r</></term>
      <term><option>--createrole</></term>
      <listitem>
       <para>
        该新用户将允许创建新角色
        （即，该用户将拥有<literal>CREATEROLE</>权限）。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-R</></term>
      <term><option>--no-createrole</></term>
      <listitem>
       <para>
        该新用户将不能创建新角色。这是缺省（设置）。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-s</></term>
      <term><option>--superuser</></term>
      <listitem>
       <para>
        该新用户将是一个超级用户。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-S</></term>
      <term><option>--no-superuser</></term>
      <listitem>
       <para>
        该新用户将不是一个超级用户。这是缺省（设置）。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
       <term><option>-V</></term>
       <term><option>--version</></term>
       <listitem>
       <para>
       输出<application>createuser</application>命令的版本信息，然后退出。
       </para>
       </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--replication</></term>
      <listitem>
       <para>
        该新用户将拥有<literal>REPLICATION</literal>权限（即角色能启动复制），
        完整的描述见文档<xref
        linkend="sql-createrole">。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--no-replication</></term>
      <listitem>
       <para>
        该新用户将没有<literal>REPLICATION</literal>权限（即角色不能启动复制），
        完整的描述见文档<xref
        linkend="sql-createrole">。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
       <term><option>-?</></term>
       <term><option>--help</></term>
       <listitem>
       <para>
       显示<application>createuser</application>命令的帮助信息，然后退出。
       </para>
       </listitem>
     </varlistentry>

    </variablelist>
  </para>

  <para>
   <application>createuser</application>还接受以下命令行选项用于连接参数：

   <variablelist>
     <varlistentry>
      <term><option>-h <replaceable class="parameter">host</replaceable></></term>
      <term><option>--host=<replaceable class="parameter">host</replaceable></></term>
      <listitem>
       <para>
        指定运行服务端的主机名。如果数值以斜杠开头则被用作到Unix域套接字的路径。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-p <replaceable class="parameter">port</replaceable></></term>
      <term><option>--port=<replaceable class="parameter">port</replaceable></></term>
      <listitem>
       <para>
        指定服务端侦听的TCP端口或一个本地Unix域套接字文件的扩展(描述符)。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-U <replaceable class="parameter">username</replaceable></></term>
      <term><option>--username=<replaceable class="parameter">username</replaceable></></term>
      <listitem>
       <para>
        进行联接的用户名（不是要创建的用户名）。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-w</></term>
      <term><option>--no-password</></term>
      <listitem>
       <para>
        永远不提示输入密码。 如果服务器要求密码验证和密码
        （并且）通过其他方式如 <filename>.pgpass</filename>文件（验证）不可用，
        则联接尝试将失败。 此选项在不需要用户输入密码的批处理作业和脚本中非常有用。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-W</></term>
      <term><option>--password</></term>
      <listitem>
       <para>
        强制<application>createuser</application>提示输入密码
        （用于联接到服务端，而不是新用户的密码）。
       </para>

       <para>
        这个选项不是必须的，如果服务器要求认证密码
        <application>createuser</application>会自动提示需输入密码。
        然而，<application>createuser</application>会浪费一个联接尝试判断出该服务器需要密码。
        在某些情况下，这是值得键入<option>-W</>以避免多余的联接尝试。
       </para>
      </listitem>
     </varlistentry>
   </variablelist>
  </para>
 </refsect1>


 <refsect1>
  <title>环境变量</title>

  <variablelist>
   <varlistentry>
    <term><envar>PGHOST</envar></term>
    <term><envar>PGPORT</envar></term>
    <term><envar>PGUSER</envar></term>

    <listitem>
     <para>
      缺省的联接参数
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
   此实用工具，像大多其他的<productname>PostgreSQL</>实用工具，
   还使用<application>libpq</>支持的环境变量(见 <xref linkend="libpq-envars">)。
  </para>

 </refsect1>


 <refsect1>
  <title>诊断</title>

  <para>
   如果有问题，将会显示后端错误信息。参阅<xref linkend="SQL-CREATEROLE">
   和<xref linkend="APP-PSQL">获取可能的问题和错误消息的描述。
   数据库服务端必须运行在目标主机。此外，前端库
   <application>libpq</application>中的所有缺省连接设置和环境变量都将适用。
  </para>

 </refsect1>


 <refsect1>
  <title>示例</title>

   <para>
    在缺省数据库服务器上创建一个<literal>joe</literal>用户：
<screen>
<prompt>$ </prompt><userinput>createuser joe</userinput>
</screen>
   </para>

   <para>
    To create a user <literal>joe</literal> on the default database
    server with prompting for some additional attributes:
<screen>
<prompt>$ </prompt><userinput>createuser --interactive joe</userinput>
<computeroutput>Shall the new role be a superuser? (y/n) </computeroutput><userinput>n</userinput>
<computeroutput>Shall the new role be allowed to create databases? (y/n) </computeroutput><userinput>n</userinput>
<computeroutput>Shall the new role be allowed to create more new roles? (y/n) </computeroutput><userinput>n</userinput>
</screen>
   </para>

   <para>
    在主机<literal>eden</>端口5000的服务端里创建（跟上例）一样<literal>joe</literal>用户，
    明确指定属性，请看下列命令：
<screen>
<prompt>$ </prompt><userinput>createuser -h eden -p 5000 -S -D -R -e joe</userinput>
<computeroutput>CREATE ROLE joe NOSUPERUSER NOCREATEDB NOCREATEROLE INHERIT LOGIN;</computeroutput>
</screen>
   </para>

   <para>
    创建超级用户<literal>joe</literal>，并立即指定一个密码：
<screen>
<prompt>$ </prompt><userinput>createuser -P -s -e joe</userinput>
<computeroutput>Enter password for new role: </computeroutput><userinput>xyzzy</userinput>
<computeroutput>Enter it again: </computeroutput><userinput>xyzzy</userinput>
<computeroutput>CREATE ROLE joe PASSWORD 'md5b5f5ba1a423792b526f799ae4eb3d59e' SUPERUSER CREATEDB CREATEROLE INHERIT LOGIN;</computeroutput>
</screen>
    在上面例子中，虽然新密码在输入的时候实际上并不会回显出来，但是我们还是明确的把它显示出来了。
    正如你看到的，密码是加密后发送到客户端。
    如果使用选项<option>--unencrypted</option>密码将会回显出来
    （也可能在服务器日志和其他地方），
    所以在其他人能看到你的屏幕的时候不要使用<option>-e</>选项。
   </para>
 </refsect1>


 <refsect1>
  <title>另请参阅</title>

  <simplelist type="inline">
   <member><xref linkend="app-dropuser"></member>
   <member><xref linkend="sql-createrole"></member>
  </simplelist>
 </refsect1>

</refentry>