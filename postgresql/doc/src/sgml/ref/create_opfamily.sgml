<!--
doc/src/sgml/ref/create_opfamily.sgml
PostgreSQL documentation
-->

<refentry id="SQL-CREATEOPFAMILY">
 <refmeta>
  <refentrytitle>CREATE OPERATOR FAMILY</refentrytitle>
  <manvolnum>7</manvolnum>
  <!--
<refmiscinfo>SQL - Language Statements</refmiscinfo>
-->
<refmiscinfo>SQL - 语句</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>CREATE OPERATOR FAMILY</refname>
  <!-- 
  <refpurpose>define a new operator family</refpurpose>
  -->
  <refpurpose>定义一个新操作符族</refpurpose>
 </refnamediv>

 <indexterm zone="sql-createopfamily">
  <primary>CREATE OPERATOR FAMILY</primary>
 </indexterm>

 <refsynopsisdiv>
<synopsis>
CREATE OPERATOR FAMILY <replaceable class="parameter">name</replaceable> USING <replaceable class="parameter">index_method</replaceable>
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <!--
<title>Description</title>
-->
<title>描述</title>

  <!--
<para>
   <command>CREATE OPERATOR FAMILY</command> creates a new operator family.
   An operator family defines a collection of related operator classes,
   and perhaps some additional operators and support functions that are
   compatible with these operator classes but not essential for the
   functioning of any individual index.  (Operators and functions that
   are essential to indexes should be grouped within the relevant operator
   class, rather than being <quote>loose</> in the operator family.
   Typically, single-data-type operators are bound to operator classes,
   while cross-data-type operators can be loose in an operator family
   containing operator classes for both data types.)
  </para>
-->
<para>
<command>CREATE OPERATOR FAMILY</command>创建一个新的操作符族。
一个操作符族定义一个相关的操作符类的集合，
或许还有与这些操作符类兼容但对单独索引的运行不重要的一些额外的操作符和支持函数。
（对索引来说重要的操作符和函数应该分组到相关的操作符类中，
而不是<quote>散漫</>在操作符族中。典型的，单数据类型操作符绑定到操作符类中，
而交叉数据类型操作符可以散漫在一个包含两种数据类型的操作符类的操作符族中。）
</para>

  <!--
<para>
   The new operator family is initially empty.  It should be populated
   by issuing subsequent <command>CREATE OPERATOR CLASS</command> commands
   to add contained operator classes, and optionally
   <command>ALTER OPERATOR FAMILY</command> commands to add <quote>loose</>
   operators and their corresponding support functions.
  </para>
-->
<para>
新的操作符族初始为空。应该随后发出<command>CREATE OPERATOR CLASS</command>
命令来添加所包含的操作符类，和可选的<command>ALTER OPERATOR FAMILY</command>
命令来添加<quote>散漫的</>操作符和它们对应的支持函数。
</para>

  <!--
<para>
   If a schema name is given then the operator family is created in the
   specified schema.  Otherwise it is created in the current schema.
   Two operator families in the same schema can have the same name only if they
   are for different index methods.
  </para>
-->
<para>
如果给出了模式名，则操作符族在指定的模式中创建。否则在当前模式中创建。
同一个模式中的两个操作符族可以有相同的名字，只要他们处理的索引方法不同就可以。
</para>

  <!--
<para>
   The user who defines an operator family becomes its owner.  Presently,
   the creating user must be a superuser.  (This restriction is made because
   an erroneous operator family definition could confuse or even crash the
   server.)
  </para>
-->
<para>
定义操作符族的用户成为其所有者。目前，创建操作符族的用户必须是超级用户。
（做这个限制是因为错误的操作符族的定义会导致服务器混乱，甚至崩溃。）
</para>

  <!--
<para>
   Refer to <xref linkend="xindex"> for further information.
  </para>
-->
<para>
参阅<xref linkend="xindex">获取更多信息。
</para>
 </refsect1>

 <refsect1>
  <!--
<title>Parameters</title>
-->
<title>参数</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">name</replaceable></term>
    <listitem>
     <!--
<para>
      The name of the operator family to be created.  The name can be
      schema-qualified.
     </para>
-->
<para>
要创建的操作符族的名字。该名字可以有模式修饰。
</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">index_method</replaceable></term>
    <listitem>
     <!--
<para>
      The name of the index method this operator family is for.
     </para>
-->
<para>
这个操作符族处理的索引方法的名字。
</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <!--
<title>Compatibility</title>
-->
<title>兼容性</title>

  <!--
<para>
   <command>CREATE OPERATOR FAMILY</command> is a
   <productname>PostgreSQL</productname> extension.  There is no
   <command>CREATE OPERATOR FAMILY</command> statement in the SQL
   standard.
  </para>
-->
<para>
<command>CREATE OPERATOR FAMILY</command>是一个<productname>PostgreSQL</productname>
扩展。在 SQL 标准中没有这个语句。
</para>
 </refsect1>

 <refsect1>
  <!--
<title>See Also</title>
-->
<title>又见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-alteropfamily"></member>
   <member><xref linkend="sql-dropopfamily"></member>
   <member><xref linkend="sql-createopclass"></member>
   <member><xref linkend="sql-alteropclass"></member>
   <member><xref linkend="sql-dropopclass"></member>
  </simplelist>
 </refsect1>
</refentry>
