<!--
doc/src/sgml/ref/alter_default_privileges.sgml
PostgreSQL documentation
-->

<refentry id="SQL-ALTERDEFAULTPRIVILEGES">
 <refmeta>
  <refentrytitle>ALTER DEFAULT PRIVILEGES</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>ALTER DEFAULT PRIVILEGES</refname>
  <refpurpose>定义默认的访问权限</refpurpose>
 </refnamediv>

 <indexterm zone="sql-alterdefaultprivileges">
  <primary>ALTER DEFAULT PRIVILEGES</primary>
 </indexterm>

 <refsynopsisdiv>
<synopsis>
ALTER DEFAULT PRIVILEGES
    [ FOR { ROLE | USER } <replaceable>target_role</replaceable> [, ...] ]
    [ IN SCHEMA <replaceable>schema_name</replaceable> [, ...] ]
    <replaceable class="parameter">abbreviated_grant_or_revoke</replaceable>

<phrase>where <replaceable class="parameter">abbreviated_grant_or_revoke</replaceable> is one of:</phrase>

GRANT { { SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER }
    [, ...] | ALL [ PRIVILEGES ] }
    ON TABLES
    TO { [ GROUP ] <replaceable class="PARAMETER">role_name</replaceable> | PUBLIC } [, ...] [ WITH GRANT OPTION ]

GRANT { { USAGE | SELECT | UPDATE }
    [, ...] | ALL [ PRIVILEGES ] }
    ON SEQUENCES
    TO { [ GROUP ] <replaceable class="PARAMETER">role_name</replaceable> | PUBLIC } [, ...] [ WITH GRANT OPTION ]

GRANT { EXECUTE | ALL [ PRIVILEGES ] }
    ON FUNCTIONS
    TO { [ GROUP ] <replaceable class="PARAMETER">role_name</replaceable> | PUBLIC } [, ...] [ WITH GRANT OPTION ]

GRANT { USAGE | ALL [ PRIVILEGES ] }
    ON TYPES
    TO { [ GROUP ] <replaceable class="PARAMETER">role_name</replaceable> | PUBLIC } [, ...] [ WITH GRANT OPTION ]

REVOKE [ GRANT OPTION FOR ]
    { { SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER }
    [, ...] | ALL [ PRIVILEGES ] }
    ON TABLES
    FROM { [ GROUP ] <replaceable class="PARAMETER">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { { USAGE | SELECT | UPDATE }
    [, ...] | ALL [ PRIVILEGES ] }
    ON SEQUENCES
    FROM { [ GROUP ] <replaceable class="PARAMETER">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { EXECUTE | ALL [ PRIVILEGES ] }
    ON FUNCTIONS
    FROM { [ GROUP ] <replaceable class="PARAMETER">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { USAGE | ALL [ PRIVILEGES ] }
    ON TYPES
    FROM { [ GROUP ] <replaceable class="PARAMETER">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]
</synopsis>
 </refsynopsisdiv>

 <refsect1 id="sql-alterdefaultprivileges-description">
  <title>描述</title>

  <para>
   <command>ALTER DEFAULT PRIVILEGES</> 允许你设置应用到以后创建的对象的权限.
(这不影响已分配给已经存在对象的权限.)  目前,
   只有表(包括视图和外部表)、序列、函数 和类型(包括域)的权限能够被更改.
  </para>

  <para>
  你能修改那些会被你自己或那些你是其中一员的角色所创建的对象的默认权限.  
    这个权限能被全局设置 (比如：给所有在当前数据库创建的对象),
或者只是给在指定模式中创建的对象.  
默认权限规定每个模式的都会被加上，无论全局默认权限是不是为了特殊的对象类型.
  </para>

  <para>
   根据 <xref linkend="sql-grant">下的解释,
   任何对象类型的默认权限通常授权全部可授与权限给对象所有者 , 
    以及授权一些权限给 <literal>PUBLIC</> .
不管怎样 , 改行为能通过使用<command>ALTER DEFAULT PRIVILEGES</>更改全局默认权限来修改.
  </para>

 <refsect2>
  <title>参数</title>

  <variablelist>
   <varlistentry>
    <term><replaceable>target_role</replaceable></term>
    <listitem>
     <para>
     已经存在并且是一个成员的前角色的名称.
      如果 <literal>FOR ROLE</>被省略, 这个当前角色是假设的.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable>schema_name</replaceable></term>
    <listitem>
     <para>
      已存在模式的名称. 如果特别指定，随后在该模式里创建的对象，会被修改为默认权限.
      如果 <literal>IN SCHEMA</>被省略了,全局默认权限也被更改了.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable>role_name</replaceable></term>
    <listitem>
     <para>
      已存在的用来授权或撤销权限的角色的名称.
      这个参数，和所有其他在    
      <replaceable class="parameter">abbreviated_grant_or_revoke</>中的参数,
       作用如       
      <xref linkend="sql-grant"> 或
      <xref linkend="sql-revoke">所述,
     是给整个类的对象而不是特定的命名对象设置权限.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect2>
 </refsect1>

 <refsect1 id="sql-alterdefaultprivileges-notes">
  <title>备注</title>

  <para>
  使用<xref linkend="app-psql">'s <command>\ddp</command> 命令
  来获取已存在的默认权限的分配信息.
  权限制的含义与<xref linkend="sql-grant">下<command>\dp</command>的解释相同。
  </para>

  <para>
  如果你希望删除一个默认权限已经被修改的角色,
  对这个角色来说，撤销默认权限上的修改
  或者使用 <command>DROP OWNED BY</> 来摆脱该角色的默认权限默认权限条目，这是必要的.
  </para>
 </refsect1>

 <refsect1 id="sql-alterdefaultprivileges-examples">
  <title>示例</title>

  <para>
  给你后来在模式<literal>myschema</literal>里创建的所有表（和视图）授予SELECT 权限
， 并且允许角色 <literal>webuser</>对他们执行INSERT:

<programlisting>
ALTER DEFAULT PRIVILEGES IN SCHEMA myschema GRANT SELECT ON TABLES TO PUBLIC;
ALTER DEFAULT PRIVILEGES IN SCHEMA myschema GRANT INSERT ON TABLES TO webuser;
</programlisting>
  </para>

  <para>
   撤销上面的操作, 因此后来创建的表不会拥有比常规情况还多的权限 :

<programlisting>
ALTER DEFAULT PRIVILEGES IN SCHEMA myschema REVOKE SELECT ON TABLES FROM PUBLIC;
ALTER DEFAULT PRIVILEGES IN SCHEMA myschema REVOKE INSERT ON TABLES FROM webuser;
</programlisting>
  </para>

  <para>
   为角色<literal>admin</>之后创建的所有的函数，移除那些通常授权在函数上的公共EXECUTE 权限:

<programlisting>
ALTER DEFAULT PRIVILEGES FOR ROLE admin REVOKE EXECUTE ON FUNCTIONS FROM PUBLIC;
</programlisting></para>
 </refsect1>

 <refsect1>
  <title>兼容性</title>

  <para>
  在SQL标准中没有<command>ALTER DEFAULT PRIVILEGES</command>语句.
  </para>
 </refsect1>

 <refsect1>
  <title>请参阅</title>

  <simplelist type="inline">
   <member><xref linkend="sql-grant"></member>
   <member><xref linkend="sql-revoke"></member>
  </simplelist>
 </refsect1>

</refentry>
