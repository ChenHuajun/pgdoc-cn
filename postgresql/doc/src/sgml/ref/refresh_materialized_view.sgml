<!--
doc/src/sgml/ref/refresh_materialized_view.sgml
PostgreSQL documentation
-->

<refentry id="SQL-REFRESHMATERIALIZEDVIEW">
 <refmeta>
  <refentrytitle>REFRESH MATERIALIZED VIEW</refentrytitle>
  <manvolnum>7</manvolnum>
  <!--
<refmiscinfo>SQL - Language Statements</refmiscinfo>
-->
<refmiscinfo>SQL - 语句</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>REFRESH MATERIALIZED VIEW</refname>
  <!-- 
  <refpurpose>replace the contents of a materialized view</refpurpose> 
  -->
  <refpurpose>替换物化视图的内容</refpurpose>
 </refnamediv>

 <indexterm zone="sql-refreshmaterializedview">
  <primary>REFRESH MATERIALIZED VIEW</primary>
 </indexterm>

 <refsynopsisdiv>
<synopsis>
REFRESH MATERIALIZED VIEW <replaceable class="PARAMETER">name</replaceable>
    [ WITH [ NO ] DATA ]
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <!--
<title>Description</title>
-->
<title>描述</title>

  <!--
<para>
   <command>REFRESH MATERIALIZED VIEW</command> completely replaces the
   contents of a materialized view.  The old contents are discarded.  If
   <literal>WITH DATA</literal> is specified (or defaults) the backing query
   is executed to provide the new data, and the materialized view is left in a
   scannable state.  If <literal>WITH NO DATA</literal> is specified no new
   data is generated and the materialized view is left in an unscannable
   state.
  </para>
-->
<para>
<command>REFRESH MATERIALIZED VIEW</command>完全替换一个物化视图的内容。旧的内容被丢弃。
如果声明了<literal>WITH DATA</literal>（或缺省），后端查询被执行以提供新的数据，
物化视图留在可扫描的状态。如果声明了<literal>WITH NO DATA</literal>，
那么不会产生新的数据，并且物化视图留在一个不可扫描的状态。
</para>
 </refsect1>

 <refsect1>
  <!--
<title>Parameters</title>
-->
<title>参数</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="PARAMETER">name</replaceable></term>
    <listitem>
     <!--
<para>
      The name (optionally schema-qualified) of the materialized view to
      refresh.
     </para>
-->
<para>
要刷新内容的物化视图的名字（可以有模式修饰）。
</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <!--
<title>Notes</title>
-->
<title>注意</title>

  <!--
<para>
   While the default index for future
   <xref linkend="SQL-CLUSTER">
   operations is retained, <command>REFRESH MATERIALIZED VIEW</> does not
   order the generated rows based on this property. If you want the data
   to be ordered upon generation, you must use an <literal>ORDER BY</>
   clause in the backing query.
  </para>
-->
<para>
当保留了未来的<xref linkend="SQL-CLUSTER">操作的缺省索引时，<command>REFRESH MATERIALIZED VIEW</>
不要求生成的行基于这个属性。如果你希望数据根据生成排序，必须在后端查询中使用一个
<literal>ORDER BY</>子句。
</para>
 </refsect1>

 <refsect1>
  <!--
<title>Examples</title>
-->
<title>例子</title>

  <!--
<para>
   This command will replace the contents of the materialized view called
   <literal>order_summary</literal> using the query from the materialized
   view's definition, and leave it in a scannable state:
<programlisting>
REFRESH MATERIALIZED VIEW order_summary;
</programlisting>
  </para>
-->
<para>
这个命令将刷新物化视图<literal>order_summary</literal>的内容，使用来自物化视图定义的查询，
并且使它留在可扫描的状态：
<programlisting>
REFRESH MATERIALIZED VIEW order_summary;
</programlisting>
</para>

  <!--
<para>
   This command will free storage associated with the materialized view
   <literal>annual_statistics_basis</literal> and leave it in an unscannable
   state:
<programlisting>
REFRESH MATERIALIZED VIEW annual_statistics_basis WITH NO DATA;
</programlisting></para>
-->
<para>
这个命令将清空物化视图<literal>annual_statistics_basis</literal>的存储区，并使它留在不可扫描的状态：
<programlisting>
REFRESH MATERIALIZED VIEW annual_statistics_basis WITH NO DATA;
</programlisting>
</para>
 </refsect1>

 <refsect1>
  <!--
<title>Compatibility</title>
-->
<title>兼容性</title>

  <!--
<para>
   <command>REFRESH MATERIALIZED VIEW</command> is a
   <productname>PostgreSQL</productname> extension.
  </para>
-->
<para>
<command>REFRESH MATERIALIZED VIEW</command>是一个<productname>PostgreSQL</productname>扩展。
</para>
 </refsect1>

 <refsect1>
  <!--
<title>See Also</title>
-->
<title>又见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-creatematerializedview"></member>
   <member><xref linkend="sql-altermaterializedview"></member>
   <member><xref linkend="sql-dropmaterializedview"></member>
  </simplelist>
 </refsect1>

</refentry>
