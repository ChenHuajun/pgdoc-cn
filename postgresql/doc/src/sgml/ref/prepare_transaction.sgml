<!--
doc/src/sgml/ref/prepare_transaction.sgml
PostgreSQL documentation
-->

<refentry id="SQL-PREPARE-TRANSACTION">
 <refmeta>
  <refentrytitle>PREPARE TRANSACTION</refentrytitle>
  <manvolnum>7</manvolnum>
  <!--
<refmiscinfo>SQL - Language Statements</refmiscinfo>
-->
<refmiscinfo>SQL - 语句</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>PREPARE TRANSACTION</refname>
  <!-- 
  <refpurpose>prepare the current transaction for two-phase commit</refpurpose>
  -->
  <refpurpose>为当前事务做两阶段提交的准备</refpurpose>
 </refnamediv>

 <indexterm zone="sql-prepare-transaction">
  <primary>PREPARE TRANSACTION</primary>
 </indexterm>

 <refsynopsisdiv>
<synopsis>
PREPARE TRANSACTION <replaceable class="PARAMETER">transaction_id</replaceable>
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <!--
<title>Description</title>
-->
<title>描述</title>

  <!--
<para>
   <command>PREPARE TRANSACTION</command> prepares the current transaction
   for two-phase commit. After this command, the transaction is no longer
   associated with the current session; instead, its state is fully stored on
   disk, and there is a very high probability that it can be committed
   successfully, even if a database crash occurs before the commit is
   requested.
  </para>
-->
<para>
<command>PREPARE TRANSACTION</command>为当前事务的两阶段提交做准备。在命令之后，
事务就不再和当前会话关联了；它的状态完全保存在磁盘上，它被提交成功的可能性非常高，
即使是在请求提交之前数据库发生了崩溃也如此。
</para>

  <!--
<para>
   Once prepared, a transaction can later be committed or rolled back
   with <xref linkend="sql-commit-prepared">
   or <xref linkend="sql-rollback-prepared">,
   respectively.  Those commands can be issued from any session, not
   only the one that executed the original transaction.
  </para>
-->
<para>
一旦准备好了，一个事务就可以在稍后用<xref linkend="sql-commit-prepared">或
<xref linkend="sql-rollback-prepared">命令分别进行提交或者回滚。
这些命令可以从任何会话中发出，而不光是最初执行事务的那个会话。
</para>

  <!--
<para>
   From the point of view of the issuing session, <command>PREPARE
   TRANSACTION</command> is not unlike a <command>ROLLBACK</> command:
   after executing it, there is no active current transaction, and the
   effects of the prepared transaction are no longer visible.  (The effects
   will become visible again if the transaction is committed.)
  </para>
-->
<para>
从发出命令的会话的角度来看，<command>PREPARE TRANSACTION</command>不同于<command>ROLLBACK</>：
在执行它之后，就不再有活跃的当前事务了，并且预备事务的效果无法见到
(在事务提交的时候其效果会再次可见)。
</para>

  <!--
<para>
   If the <command>PREPARE TRANSACTION</command> command fails for any
   reason, it becomes a <command>ROLLBACK</>: the current transaction
   is canceled.
  </para>
-->
<para>
如果<command>PREPARE TRANSACTION</command>因为某些原因失败，
那么它就会变成一个<command>ROLLBACK</>，当前事务被取消。
</para>
 </refsect1>

 <refsect1>
  <!--
<title>Parameters</title>
-->
<title>参数</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="PARAMETER">transaction_id</replaceable></term>
    <listitem>
     <!--
<para>
      An arbitrary identifier that later identifies this transaction for
      <command>COMMIT PREPARED</> or <command>ROLLBACK PREPARED</>.
      The identifier must be written as a string literal, and must be
      less than 200 bytes long.  It must not be the same as the identifier
      used for any currently prepared transaction.
     </para>
-->
<para>
一个任意的标识符，用于后面在<command>COMMIT PREPARED</>或<command>ROLLBACK PREPARED</>
的时候标识这个事务。这个标识符必须以字符串文本的方式书写，并且必须小于 200 字节长。
它不能和任何当前预备事务已经使用了的标识符同名。
</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <!--
<title>Notes</title>
-->
<title>注意</title>

  <!--
<para>
   <command>PREPARE TRANSACTION</> is not intended for use in applications
   or interactive sessions. Its purpose is to allow an external
   transaction manager to perform atomic global transactions across multiple
   databases or other transactional resources. Unless you're writing a
   transaction manager, you probably shouldn't be using <command>PREPARE
   TRANSACTION</>.
  </para>
-->
<para>
<command>PREPARE TRANSACTION</>不是为了在应用或交互会话中使用。
它的目的是允许外部的事务管理器实现多个数据库或者与其他事务源实现原子的全局事务。
除非你写一个事务管理器，否则你不应该使用<command>PREPARE TRANSACTION</>。
</para>

  <!--
<para>
   This command must be used inside a transaction block. Use <xref
   linkend="sql-begin"> to start one.
  </para>
-->
<para>
这条命令必须在一个事务块里面使用。用<xref linkend="sql-begin">开始一个事务。
</para>

  <!--
<para>
   It is not currently allowed to <command>PREPARE</> a transaction that
   has executed any operations involving temporary tables,
   created any cursors <literal>WITH HOLD</>, or executed
   <command>LISTEN</> or <command>UNLISTEN</>.
   Those features are too tightly
   tied to the current session to be useful in a transaction to be prepared.
  </para>
-->
<para>
目前，不允许对那些执行了涉及临时表，或者是创建了带<literal>WITH HOLD</>游标，
或者执行了<command>LISTEN</>或<command>UNLISTEN</>的事务进行<command>PREPARE</>。
这些特性和当前会话绑定得实在是太紧密了，因此在一个预备事务里没什么可用的。
</para>

  <!--
<para>
   If the transaction modified any run-time parameters with <command>SET</>
   (without the <literal>LOCAL</> option),
   those effects persist after <command>PREPARE TRANSACTION</>, and will not
   be affected by any later <command>COMMIT PREPARED</command> or
   <command>ROLLBACK PREPARED</command>.  Thus, in this one respect
   <command>PREPARE TRANSACTION</> acts more like <command>COMMIT</> than
   <command>ROLLBACK</>.
  </para>
-->
<para>
如果事务用<command>SET</>（没有<literal>LOCAL</>选项）修改了运行时参数，
这些效果在<command>PREPARE TRANSACTION</>之后保留，并且不会被任何以后的
<command>COMMIT PREPARED</command>或<command>ROLLBACK PREPARED</command>所影响。
因此，在这方面，<command>PREPARE TRANSACTION</> 表现得更像<command>COMMIT</>而不是<command>ROLLBACK</>。
</para>

  <!--
<para>
   All currently available prepared transactions are listed in the
   <link linkend="view-pg-prepared-xacts"><structname>pg_prepared_xacts</structname></link>
   system view.
  </para>
-->
<para>
所有目前可用的预备事务都在系统视图<link linkend="view-pg-prepared-xacts"><structname>pg_prepared_xacts</structname></link>
里面列出。
</para>

  <caution>
   <!--
<para>
    It is unwise to leave transactions in the prepared state for a long time.
    This will interfere with the ability of <command>VACUUM</> to reclaim
    storage, and in extreme cases could cause the database to shut down
    to prevent transaction ID wraparound (see <xref
    linkend="vacuum-for-wraparound">).  Keep in mind also that the transaction
    continues to hold whatever locks it held.  The intended usage of the
    feature is that a prepared transaction will normally be committed or
    rolled back as soon as an external transaction manager has verified that
    other databases are also prepared to commit.
   </para>
-->
<para>
把一个事务长时间停在预备状态是不明智的：它会影响<command>VACUUM</>回收存储的能力，
并且在极端情况可能导致数据库关闭以阻止包括事务ID（参阅<xref linkend="vacuum-for-wraparound">）。
还要记住，事务会继续持有它们持有的锁。
这个特性的用法是预备事务通常会在外部的事务管理器核实了其它数据库也准备好提交之后，提交或者回滚事务。
</para>

   <!--
<para>
    If you have not set up an external transaction manager to track prepared
    transactions and ensure they get closed out promptly, it is best to keep
    the prepared-transaction feature disabled by setting
    <xref linkend="guc-max-prepared-transactions"> to zero.  This will
    prevent accidental creation of prepared transactions that might then
    be forgotten and eventually cause problems.
   </para>
-->
<para>
如果你还没有设置一个额外的事务管理器追踪预备事务和确保他们得到及时关闭，
最好通过设置<xref linkend="guc-max-prepared-transactions">为0来保持预备事务特征不可用。
这将阻止意外的创建可能被遗忘和最终导致问题的预备事务。
</para>
  </caution>
 </refsect1>

 <refsect1 id="sql-prepare-transaction-examples">
  <!-- 
  <title id="sql-prepare-transaction-examples-title">Examples</title> 
  -->
  <title id="sql-prepare-transaction-examples-title">例子</title>
  <!--
<para>
   Prepare the current transaction for two-phase commit, using
   <literal>foobar</> as the transaction identifier:

<programlisting>
PREPARE TRANSACTION 'foobar';
</programlisting></para>
-->
<para>
为当前事务做两阶段提交的准备，使用<literal>foobar</>做为事务标识符：
<programlisting>
PREPARE TRANSACTION 'foobar';
</programlisting>
</para>
 </refsect1>

 <refsect1>
  <!--
<title>Compatibility</title>
-->
<title>兼容性</title>

  <!--
<para>
   <command>PREPARE TRANSACTION</command> is a
   <productname>PostgreSQL</productname> extension.  It is intended for use by
   external transaction management systems, some of which are covered by
   standards (such as X/Open XA), but the SQL side of those systems is not
   standardized.
  </para>
-->
<para>
<command>PREPARE TRANSACTION</command>是一个<productname>PostgreSQL</productname>扩展。
该命令设计是给外部事务管理系统使用，SQL标准只涉及部分功能（如X/Open XA），但这些功能目前没有标准化。
</para>
 </refsect1>

 <refsect1>
  <!--
<title>See Also</title>
-->
<title>又见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-commit-prepared"></member>
   <member><xref linkend="sql-rollback-prepared"></member>
  </simplelist>
 </refsect1>

</refentry>