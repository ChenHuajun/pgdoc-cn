<!-- doc/src/sgml/ref/create_conversion.sgml -->

<refentry id="SQL-CREATECONVERSION">
 <refmeta>
  <refentrytitle>CREATE CONVERSION</refentrytitle>
  <manvolnum>7</manvolnum>
  <!--
<refmiscinfo>SQL - Language Statements</refmiscinfo>
-->
<refmiscinfo>SQL - 语句</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>CREATE CONVERSION</refname>
  <!--
<refpurpose>define a new encoding conversion</refpurpose>
-->
<refpurpose>
定义一个新的编码转换
</refpurpose>
 </refnamediv>

 <indexterm zone="sql-createconversion">
  <primary>CREATE CONVERSION</primary>
 </indexterm>

 <refsynopsisdiv>
<synopsis>
CREATE [ DEFAULT ] CONVERSION <replaceable>name</replaceable>
    FOR <replaceable>source_encoding</replaceable> TO <replaceable>dest_encoding</replaceable> FROM <replaceable>function_name</replaceable>
</synopsis>
 </refsynopsisdiv>

 <refsect1 id="sql-createconversion-description">
  <!--
<title>Description</title>
-->
<title>描述</title>

  <!--
<para>
   <command>CREATE CONVERSION</command> defines a new conversion between
   character set encodings.  Also, conversions that
   are marked <literal>DEFAULT</> can be used for automatic encoding
   conversion between
   client and server. For this purpose, two conversions, from encoding A to
   B <emphasis>and</emphasis> from encoding B to A, must be defined.
 </para>
-->
<para>
<command>CREATE CONVERSION</command>定义字符集之间的转换。
标记为<literal>DEFAULT</>的转换可以用于在前端和后端之间的自动编码转换。
出于这个原因，一般的转换如从编码 A 到 B<emphasis>和</emphasis>从编码B到A，必须定义两种转换。
</para>

  <!--
<para>
   To be able to create a conversion, you must have <literal>EXECUTE</literal> privilege
   on the function and <literal>CREATE</literal> privilege on the destination schema.
  </para>
-->
<para>
为了可以创建转换，你必须有函数的<literal>EXECUTE</literal>权限并且在目标模式上有<literal>CREATE</literal>权限。 
</para>
 </refsect1>


 <refsect1>
  <!--
<title>Parameters</title>
-->
<title>参数</title>

   <variablelist>
    <varlistentry>
     <term><literal>DEFAULT</literal></term>

     <listitem>
      <!--
<para>
       The <literal>DEFAULT</> clause indicates that this conversion
       is the default for this particular source to destination
       encoding. There should be only one default encoding in a schema
       for the encoding pair.
      </para>
-->
<para>
<literal>DEFAULT</>选项表示这种转换是从这种源编码到目标编码的缺省转换。 
同一个模式里每一对编码应该只有一个缺省编码转换。 
</para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable>name</replaceable></term>

     <listitem>
      <!--
<para>
       The name of the conversion. The conversion name can be
       schema-qualified. If it is not, the conversion is defined in the
       current schema. The conversion name must be unique within a
       schema.
      </para>
-->
<para>
转换的名字。转换名可以用模式修饰。如果没有，那么转换就在当前模式中定义。 转换名在一个模式里必须唯一。 
</para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable>source_encoding</replaceable></term>

     <listitem>
      <!--
<para>
       The source encoding name.
      </para>
-->
<para>
源编码名。
</para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable>dest_encoding</replaceable></term>

     <listitem>
      <!--
<para>
       The destination encoding name.
      </para>
-->
<para>
目标编码名 。
</para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable>function_name</replaceable></term>

     <listitem>
      <!--
<para>
       The function used to perform the conversion.  The function name can
       be schema-qualified.  If it is not, the function will be looked
       up in the path.
      </para>
-->
<para>
用于执行转换的函数。这个函数名可以用模式名修饰。如果没有，那么将从路径中找出这个函数。 
</para>

      <!--
<para>
       The function must have the following signature:

<programlisting>
conv_proc(
    integer,  &#45;&#45; source encoding ID
    integer,  &#45;&#45; destination encoding ID
    cstring,  &#45;&#45; source string (null terminated C string)
    internal, &#45;&#45; destination (fill with a null terminated C string)
    integer   &#45;&#45; source string length
) RETURNS void;
</programlisting>
</para>
-->
<para>
此函数必须有如下的样子： 
<programlisting>
conv_proc(
    integer,  &#45;&#45; source encoding ID
    integer,  &#45;&#45; destination encoding ID
    cstring,  &#45;&#45; source string (null terminated C string)
    internal, &#45;&#45; destination (fill with a null terminated C string)
    integer   &#45;&#45; source string length
) RETURNS void;
</programlisting>
</para>
     </listitem>
    </varlistentry>
   </variablelist>
 </refsect1>

 <refsect1 id="sql-createconversion-notes">
  <!--
<title>Notes</title>
-->
<title>注意</title>

  <!--
<para>
   Use <command>DROP CONVERSION</command> to remove user-defined conversions.
  </para>
-->
<para>
用<command>DROP CONVERSION</command>删除用户定义的转换。 
</para>

  <!--
<para>
   The privileges required to create a conversion might be changed in a future
   release.
  </para>
-->
<para>
创建转换所需要的权限可能在未来的版本中改变。
</para>
 </refsect1>

 <refsect1 id="sql-createconversion-examples">
  <!--
<title>Examples</title>
-->
<title>例子</title>

  <!--
<para>
   To create a conversion from encoding <literal>UTF8</literal> to
   <literal>LATIN1</literal> using <function>myfunc</>:
<programlisting>
CREATE CONVERSION myconv FOR 'UTF8' TO 'LATIN1' FROM myfunc;
</programlisting></para>
-->
<para>
用<function>myfunc</>创建一个从<literal>UTF8</literal>编码到<literal>LATIN1</literal>编码的转换： 
<programlisting>
CREATE CONVERSION myconv FOR 'UTF8' TO 'LATIN1' FROM myfunc;
</programlisting>
</para>
 </refsect1>


 <refsect1 id="sql-createconversion-compat">
  <!--
<title>Compatibility</title>
-->
<title>兼容性</title>

  <!--
<para>
    <command>CREATE CONVERSION</command>
    is a <productname>PostgreSQL</productname> extension.
    There is no <command>CREATE CONVERSION</command>
    statement in the SQL standard, but a <command>CREATE TRANSLATION</command>
    statement that is very similar in purpose and syntax.
  </para>
-->
<para>
<command>CREATE CONVERSION</command>是<productname>PostgreSQL</productname>的扩展。 
在SQL标准里没有<command>CREATE CONVERSION</command>语句。 
但有一个在语法和意义上都很相似的<command>CREATE TRANSLATION</command>语句。 
</para>
 </refsect1>


 <refsect1 id="sql-createconversion-seealso">
  <!--
<title>See Also</title>
-->
<title>参见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-alterconversion"></member>
   <member><xref linkend="sql-createfunction"></member>
   <member><xref linkend="sql-dropconversion"></member>
  </simplelist>
 </refsect1>

</refentry>
