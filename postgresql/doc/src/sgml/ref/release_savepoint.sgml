<!--
doc/src/sgml/ref/release_savepoint.sgml
PostgreSQL documentation
-->

<refentry id="SQL-RELEASE-SAVEPOINT">
 <refmeta>
  <refentrytitle>RELEASE SAVEPOINT</refentrytitle>
  <manvolnum>7</manvolnum>
  <!--
<refmiscinfo>SQL - Language Statements</refmiscinfo>
-->
<refmiscinfo>SQL - 语句</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>RELEASE SAVEPOINT</refname>
  <!-- 
  <refpurpose>destroy a previously defined savepoint</refpurpose> 
  -->
  <refpurpose>删除一个先前定义的保存点</refpurpose>
 </refnamediv>

 <indexterm zone="sql-release-savepoint">
  <primary>RELEASE SAVEPOINT</primary>
 </indexterm>

 <indexterm zone="sql-release-savepoint">
  <!-- 
  <primary>savepoints</primary>
  <secondary>releasing</secondary>
  -->
  <primary>保存点</primary>
  <secondary>释放</secondary>
 </indexterm>

 <refsynopsisdiv>
<synopsis>
RELEASE [ SAVEPOINT ] <replaceable>savepoint_name</replaceable>
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <!--
<title>Description</title>
-->
<title>描述</title>

  <!--
<para>
   <command>RELEASE SAVEPOINT</command> destroys a savepoint previously defined
   in the current transaction.
  </para>
-->
<para>
<command>RELEASE SAVEPOINT</command>删除一个当前事务先前定义的保存点。
</para>

  <!--
<para>
   Destroying a savepoint makes it unavailable as a rollback point,
   but it has no other user visible behavior.  It does not undo the
   effects of commands executed after the savepoint was established.
   (To do that, see <xref linkend="sql-rollback-to">.)
   Destroying a savepoint when
   it is no longer needed allows the system to reclaim some resources
   earlier than transaction end.
  </para>
-->
<para>
把一个保存点删除就令其无法作为回滚点使用，除此之外它没有其它用户可见的行为。
它并不能撤销在保存点建立起来之后执行的命令的影响。要撤销那些命令可以使用<xref linkend="sql-rollback-to">。
在不再需要的时候删除一个保存点可以令系统在事务结束之前提前回收一些资源。
</para>

  <!--
<para>
   <command>RELEASE SAVEPOINT</command> also destroys all savepoints that were
   established after the named savepoint was established.
  </para>
-->
<para>
<command>RELEASE SAVEPOINT</command>也删除指定保存点之后建立的所有保存点。
</para>
 </refsect1>

 <refsect1>
  <!--
<title>Parameters</title>
-->
<title>参数</title>

  <variablelist>
   <varlistentry>
    <term><replaceable>savepoint_name</replaceable></term>
    <listitem>
     <!--
<para>
      The name of the savepoint to destroy.
     </para>
-->
<para>
要删除的保存点的名字。
</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <!--
<title>Notes</title>
-->
<title>注意</title>

  <!--
<para>
   Specifying a savepoint name that was not previously defined is an error.
  </para>
-->
<para>
声明一个以前没有定义的保存点名字将导致错误。
</para>

  <!--
<para>
   It is not possible to release a savepoint when the transaction is in
   an aborted state.
  </para>
-->
<para>
如果事务在回滚状态，则不能释放保存点。
</para>

  <!--
<para>
   If multiple savepoints have the same name, only the one that was most
   recently defined is released.
  </para>
-->
<para>
如果多个保存点拥有同样的名字，只有最近定义的那个才被释放。
</para>

 </refsect1>

 <refsect1>
  <!--
<title>Examples</title>
-->
<title>例子</title>

  <!--
<para>
   To establish and later destroy a savepoint:
<programlisting>
BEGIN;
    INSERT INTO table1 VALUES (3);
    SAVEPOINT my_savepoint;
    INSERT INTO table1 VALUES (4);
    RELEASE SAVEPOINT my_savepoint;
COMMIT;
</programlisting>
   The above transaction will insert both 3 and 4.
  </para>
-->
<para>
建立并稍后删除一个保存点：
<programlisting>
BEGIN;
    INSERT INTO table1 VALUES (3);
    SAVEPOINT my_savepoint;
    INSERT INTO table1 VALUES (4);
    RELEASE SAVEPOINT my_savepoint;
COMMIT;
</programlisting>
上面的事务将同时插入 3 和 4 。
</para>
 </refsect1>

 <refsect1>
  <!--
<title>Compatibility</title>
-->
<title>兼容性</title>

  <!--
<para>
   This command conforms to the <acronym>SQL</> standard.  The standard
   specifies that the key word <literal>SAVEPOINT</literal> is
   mandatory, but <productname>PostgreSQL</productname> allows it to
   be omitted.
  </para>
-->
<para>
这条命令遵循<acronym>SQL</>标准。标准规定关键字<literal>SAVEPOINT</literal>是必须的。
但<productname>PostgreSQL</productname>允许省略它。
</para>
 </refsect1>

 <refsect1>
  <!--
<title>See Also</title>
-->
<title>又见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-begin"></member>
   <member><xref linkend="sql-commit"></member>
   <member><xref linkend="sql-rollback"></member>
   <member><xref linkend="sql-rollback-to"></member>
   <member><xref linkend="sql-savepoint"></member>
  </simplelist>
 </refsect1>
</refentry>