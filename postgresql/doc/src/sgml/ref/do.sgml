<!--
doc/src/sgml/ref/do.sgml
PostgreSQL documentation
-->

<refentry id="SQL-DO">
 <refmeta>
  <refentrytitle>DO</refentrytitle>
  <manvolnum>7</manvolnum>
<!--
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
-->
   <refmiscinfo>SQL - 语句</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>DO</refname>
<!--
  <refpurpose>execute an anonymous code block</refpurpose>
-->
  <refpurpose>执行匿名代码块</refpurpose>
 </refnamediv>

 <indexterm zone="sql-do">
  <primary>DO</primary>
 </indexterm>

 <indexterm zone="sql-do">
<!--
  <primary>anonymous code blocks</primary>
-->
  <primary>匿名代码块</primary>
 </indexterm>

 <refsynopsisdiv>
<synopsis>
DO [ LANGUAGE <replaceable class="PARAMETER">lang_name</replaceable> ] <replaceable class="PARAMETER">code</replaceable>
</synopsis>
 </refsynopsisdiv>

 <refsect1>
<!--
  <title>Description</title>
-->
  <title>描述</title>
  
<!--
  <para>
   <command>DO</command> executes an anonymous code block, or in other
   words a transient anonymous function in a procedural language.
  </para>
-->
  <para>
   <command>DO</command>执行一段匿名代码块, 换句话说，在程序语言过程中一次性执行的匿名函数。
  </para>
<!--
  <para>
   The code block is treated as though it were the body of a function
   with no parameters, returning <type>void</>.  It is parsed and
   executed a single time.
  </para>
-->
  <para>
   代码块被看做是没有参数的一段函数体，返回值类型是<type>void</>。它的解析和执行时同一时刻发生的。
  </para>
<!--
  <para>
   The optional <literal>LANGUAGE</> clause can be written either
   before or after the code block.
  </para>
-->
  <para>
   可选属性<literal>LANGUAGE</>可以在代码块之前写，也可以写在代码块的后面。
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>Parameters</title>
-->
  <title>参数</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="PARAMETER">code</replaceable></term>
    <listitem>
<!--
     <para>
      The procedural language code to be executed.  This must be specified
      as a string literal, just as in <command>CREATE FUNCTION</>.
      Use of a dollar-quoted literal is recommended.
      todo：此处理解不太好
     </para>
-->
     <para>
      程序语言代码可以被执行的。程序语言必须指定为字符串才行, 就像命令<command>CREATE FUNCTION</>，推荐使用美元符号一样。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="PARAMETER">lang_name</replaceable></term>
    <listitem>
<!--
     <para>
      The name of the procedural language the code is written in.
      If omitted, the default is <literal>plpgsql</>.
     </para>
-->
     <para>
      用来解析代码的程序语言的名字，如果缺省，默认的语言是<literal>plpgsql</>。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
<!--
  <title>Notes</title>
-->
  <title>注意事项</title>
<!--
  <para>
   The procedural language to be used must already have been installed
   into the current database by means of <command>CREATE LANGUAGE</>.
   <literal>plpgsql</> is installed by default, but other languages are not.
  </para>
-->
  <para>
   程序语言在使用之前，必须通过命令<command>CREATE LANGUAGE</>安装到当前的数据库中。
   <literal>plpgsql</>是默认的安装语言，其它语言安装时必须指定。
  </para>
<!--
  <para>
   The user must have <literal>USAGE</> privilege for the procedural
   language, or must be a superuser if the language is untrusted.
   This is the same privilege requirement as for creating a function
   in the language.
  </para>
-->
  <para>
   如果语言是不受信任的，用户必须有使用程序语言的<literal>USAGE</>权限，或者是超级用户。
   在语言上，这同创建一个函数是一样的权限要求。
  </para>
 </refsect1>

 <refsect1 id="sql-do-examples">
<!--
  <title id="sql-do-examples-title">Examples</title>
-->
  <title id="sql-do-examples-title">例子</title>
<!--
  <para>
   Grant all privileges on all views in schema <literal>public</> to
   role <literal>webuser</>:
<programlisting>
DO $$DECLARE r record;
BEGIN
    FOR r IN SELECT table_schema, table_name FROM information_schema.tables
             WHERE table_type = 'VIEW' AND table_schema = 'public'
    LOOP
        EXECUTE 'GRANT ALL ON ' || quote_ident(r.table_schema) || '.' || quote_ident(r.table_name) || ' TO webuser';
    END LOOP;
END$$;
</programlisting></para>
-->

  <para>
   授予角色<literal>webuser</>对模式<literal>public</>下视图的所有操作权限：
<programlisting>
DO $$DECLARE r record;
BEGIN
    FOR r IN SELECT table_schema, table_name FROM information_schema.tables
             WHERE table_type = 'VIEW' AND table_schema = 'public'
    LOOP
        EXECUTE 'GRANT ALL ON ' || quote_ident(r.table_schema) || '.' || quote_ident(r.table_name) || ' TO webuser';
    END LOOP;
END$$;
</programlisting></para>

 </refsect1>

 <refsect1>
<!--
  <title>Compatibility</title>
-->
  <title>兼容性</title>
<!--
  <para>
   There is no <command>DO</command> statement in the SQL standard.
  </para>
-->
  <para>
   SQL标准中没有<command>DO</command>语句。
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>See Also</title>
-->
  <title>又见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-createlanguage"></member>
  </simplelist>
 </refsect1>
</refentry>
