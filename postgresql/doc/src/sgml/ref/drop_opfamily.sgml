<!--
doc/src/sgml/ref/drop_opfamily.sgml
PostgreSQL documentation
-->

<refentry id="SQL-DROPOPFAMILY">
 <refmeta>
  <refentrytitle>DROP OPERATOR FAMILY</refentrytitle>
  <manvolnum>7</manvolnum>
  <!--
<refmiscinfo>SQL - Language Statements</refmiscinfo>
-->
<refmiscinfo>SQL - 语句</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>DROP OPERATOR FAMILY</refname>
  <!-- 
  <refpurpose>remove an operator family</refpurpose>
  -->
  <refpurpose>删除一个操作符族</refpurpose>
 </refnamediv>

 <indexterm zone="sql-dropopfamily">
  <primary>DROP OPERATOR FAMILY</primary>
 </indexterm>

 <refsynopsisdiv>
<synopsis>
DROP OPERATOR FAMILY [ IF EXISTS ] <replaceable class="PARAMETER">name</replaceable> USING <replaceable class="PARAMETER">index_method</replaceable> [ CASCADE | RESTRICT ]
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <!-- 
  <title>Description</title> 
  -->
  <title>描述</title>

  <!--
<para>
   <command>DROP OPERATOR FAMILY</command> drops an existing operator family.
   To execute this command you must be the owner of the operator family.
  </para>
-->
<para>
<command>DROP OPERATOR FAMILY</command>删除一个现有的操作符族。
要执行这条命令，你必须是此操作符族的所有者。
</para>

  <!--
<para>
   <command>DROP OPERATOR FAMILY</command> includes dropping any operator
   classes contained in the family, but it does not drop any of the operators
   or functions referenced by the family.  If there are any indexes depending
   on operator classes within the family, you will need to specify
   <literal>CASCADE</> for the drop to complete.
  </para>
-->
<para>
<command>DROP OPERATOR FAMILY</command>包含删除任何包含在该族内的操作符类，
但是不会删除被该族引用的任何操作符或函数。如果有任何索引依赖于该族内的操作符类，
则需要声明<literal>CASCADE</>来一起删除。
</para>
 </refsect1>

 <refsect1>
  <!--
<title>Parameters</title>
-->
<title>参数</title>

  <variablelist>

   <varlistentry>
    <term><literal>IF EXISTS</literal></term>
    <listitem>
     <!--
<para>
      Do not throw an error if the operator family does not exist.
      A notice is issued in this case.
     </para>
-->
<para>
如果指定的操作符族不存在，那么发出一个 notice 而不是抛出一个错误。
</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">name</replaceable></term>
    <listitem>
     <!--
<para>
      The name (optionally schema-qualified) of an existing operator family.
     </para>
-->
<para>
一个现存操作符族的名字(可以用模式修饰)。
</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">index_method</replaceable></term>
    <listitem>
     <!--
<para>
      The name of the index access method the operator family is for.
     </para>
-->
<para>
操作符族所引用的索引访问方法的名字
</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>CASCADE</literal></term>
    <listitem>
     <!--
<para>
      Automatically drop objects that depend on the operator family.
     </para>
-->
<para>
级联删除依赖于该操作符族的对象。
</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>RESTRICT</literal></term>
    <listitem>
     <!--
<para>
      Refuse to drop the operator family if any objects depend on it.
      This is the default.
     </para>
-->
<para>
如果有任何依赖对象存在，则拒绝删除此操作符族。这个行为是缺省。
</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <!--
<title>Examples</title>
-->
<title>例子</title>

  <!--
<para>
   Remove the B-tree operator family <literal>float_ops</literal>:

<programlisting>
DROP OPERATOR FAMILY float_ops USING btree;
</programlisting>

   This command will not succeed if there are any existing indexes
   that use operator classes within the family.  Add <literal>CASCADE</> to
   drop such indexes along with the operator family.
  </para>
-->
<para>
删除 B-tree 操作符类<literal>float_ops</literal>：
<programlisting>
DROP OPERATOR FAMILY float_ops USING btree;
</programlisting>
如果有任何现存的索引使用该族中的操作符类，那么这条命令将不能执行。
增加一个<literal>CASCADE</>删除这样的索引以及这个操作符族。
</para>
 </refsect1>

 <refsect1>
  <!--
<title>Compatibility</title>
-->
<title>兼容性</title>

  <!--
<para>
   There is no <command>DROP OPERATOR FAMILY</command> statement in the
   SQL standard.
  </para>
-->
<para>
SQL 标准里没有<command>DROP OPERATOR FAMILY</command>语句。
</para>
 </refsect1>

 <refsect1>
  <!--
<title>See Also</title>
-->
<title>又见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-alteropfamily"></member>
   <member><xref linkend="sql-createopfamily"></member>
   <member><xref linkend="sql-alteropclass"></member>
   <member><xref linkend="sql-createopclass"></member>
   <member><xref linkend="sql-dropopclass"></member>
  </simplelist>
 </refsect1>

</refentry>
