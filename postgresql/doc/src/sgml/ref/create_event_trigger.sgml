<!--
doc/src/sgml/ref/create_event_trigger.sgml
PostgreSQL documentation
-->

<refentry id="SQL-CREATEEVENTTRIGGER">
 <refmeta>
  <refentrytitle>CREATE EVENT TRIGGER</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>CREATE EVENT TRIGGER</refname>
  <refpurpose><!--define a new event trigger-->定义一个事件触发器</refpurpose>
 </refnamediv>

 <indexterm zone="sql-createeventtrigger">
  <primary>CREATE EVENT TRIGGER</primary>
 </indexterm>

 <refsynopsisdiv>
<synopsis>
CREATE EVENT TRIGGER <replaceable class="PARAMETER">name</replaceable>
  ON <replaceable class="PARAMETER">event</replaceable>
  [ WHEN <replaceable class="PARAMETER">filter_variable</replaceable> IN (filter_value [, ... ]) [ AND ... ] ]
  EXECUTE PROCEDURE <replaceable class="PARAMETER">function_name</replaceable>()
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title><!--Description-->描述</title>

  <para>
<!--
   <command>CREATE EVENT TRIGGER</command> creates a new event trigger.
   Whenever the designated event occurs and the <literal>WHEN</> condition
   associated with the trigger, if any, is satisfied, the trigger function
   will be executed.  For a general introduction to event triggers, see
   <xref linkend="event-triggers">.  The user who creates an event trigger
   becomes its owner.
-->
  <command>CREATE EVENT TRIGGER</command>创建一个新的事件触发器.无论何时指定的事件发生或<literal>WHEN</>的条件满足触发器，触发器函数将被执行．对于事件触发器的一般说明，请见于<xref linkend="event-triggers">. 创建事件触发器的用户将变为它的拥有者.
</para>
 </refsect1>

 <refsect1>
  <title><!--Parameters-->参数</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">name</replaceable></term>
    <listitem>
     <para>
<!--
      The name to give the new trigger.  This name must be unique within
      the database.
-->
一个新的触发器的名字．这个名字必须在数据库内是唯一的.     
</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">event</replaceable></term>
    <listitem>
     <para>
<!--
      The name of the event that triggers a call to the given function.
      See <xref linkend="event-trigger-definition"> for more information
      on event names.
-->
     触发调用一个给定函数的事件名子.关于事件名字的更多信息见于 <xref linkend="event-trigger-definition">.
</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">filter_variable</replaceable></term>
    <listitem>
     <para>
<!--
      The name of a variable used to filter events.  This makes it possible
      to restrict the firing of the trigger to a subset of the cases in which
      it is supported.  Currently the only supported
      <replaceable class="parameter">filter_variable</replaceable>
      is <literal>TAG</literal>.
-->
过滤事件的变量名称.这将限制它所支持的事件的一个子集去触发该触发器.现在仅支持<replaceable class="parameter">filter_variable</replaceable>值为TAG.     
</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">filter_value</replaceable></term>
    <listitem>
     <para>
<!--
      A list of values for the
      associated <replaceable class="parameter">filter_variable</replaceable>
      for which the trigger should fire.  For <literal>TAG</>, this means a
      list of command tags (e.g. <literal>'DROP FUNCTION'</>).
-->
可以触发该触发器的 <replaceable class="parameter">filter_variable</replaceable>相关的值.对于<literal>TAG</>,这意味着一个tags的命令列表.(例如.<literal>'DROP FUNCTION'</>).
</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">function_name</replaceable></term>
    <listitem>
     <para>
<!--
      A user-supplied function that is declared as taking no argument and
      returning type <literal>event_trigger</literal>.
-->
一个用户声明的不带参数的函数并且返回 <literal>event_trigger</literal>类型.
</para>
    </listitem>
   </varlistentry>

  </variablelist>
 </refsect1>

 <refsect1 id="sql-createeventtrigger-notes">
  <title>Notes</title>

  <para>
<!--
   Only superusers can create event triggers.
-->
只有超户能创建事件触发器.  
</para>

  <para>
<!--
   Event triggers are disabled in single-user mode (see <xref
   linkend="app-postgres">).  If an erroneous event trigger disables the
   database so much that you can't even drop the trigger, restart in
   single-user mode and you'll be able to do that.
-->
在单用户模式下事件触发器是被关闭的(详见于<xref linkend="app-postgres">).  如果一个错误的事件触发器关闭了数据库,在单用户模式下你将不能重启数据库,删除事件触发器.
</para>
 </refsect1>

 <refsect1 id="sql-createeventtrigger-examples">
  <title>Examples</title>

  <para>
<!--
   Forbid the execution of any <link linkend="ddl">DDL</link> command:
-->
禁止执行任何<link linkend="ddl">DDL</link>命令:
<programlisting>
CREATE OR REPLACE FUNCTION abort_any_command()
  RETURNS event_trigger
 LANGUAGE plpgsql
  AS $$
BEGIN
  RAISE EXCEPTION 'command % is disabled', tg_tag;
END;
$$;

CREATE EVENT TRIGGER abort_ddl ON ddl_command_start
   EXECUTE PROCEDURE abort_any_command();
</programlisting></para>
 </refsect1>

 <refsect1 id="sql-createeventtrigger-compatibility">
  <title>Compatibility</title>

  <para>
<!--
   There is no <command>CREATE EVENT TRIGGER</command> statement in the
   SQL standard.
-->
在标准的SQL语法中没有 <command>CREATE EVENT TRIGGER</command>语句.
</para>

 </refsect1>

 <refsect1>
  <title>相关内容</title>

  <simplelist type="inline">
   <member><xref linkend="sql-altereventtrigger"></member>
   <member><xref linkend="sql-dropeventtrigger"></member>
   <member><xref linkend="sql-createfunction"></member>
  </simplelist>
 </refsect1>
</refentry>
