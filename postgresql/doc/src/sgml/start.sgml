<!-- doc/src/sgml/start.sgml -->

 <chapter id="tutorial-start">
 <!--
  <title>Getting Started</title>
-->
<title>从头开始</title>
  <sect1 id="tutorial-install">
   <!--
   <title>Installation</title>
-->
<title>安装</title>
<!--
   <para>
    Before you can use <productname>PostgreSQL</productname> you need
    to install it, of course.  It is possible that
    <productname>PostgreSQL</productname> is already installed at your
    site, either because it was included in your operating system
    distribution or because the system administrator already installed
    it.  If that is the case, you should obtain information from the
    operating system documentation or your system administrator about
    how to access <productname>PostgreSQL</productname>.
   </para>
-->
<para>
自然，在你想开始使用<productname>PostgreSQL</productname>之前，你必须安装它。
<productname>PostgreSQL</productname>很有可能
已经安装到你的节点上了，可能是因为它包含在操作系统的发布里，或者是因为系
统管理员已经安装了它。如果是这样的话，那么你应该从操作系统的文档或者系统
管理员那里获取如何访问<productname>PostgreSQL</productname>的信息。
</para>
<!--
   <para>
    If you are not sure whether <productname>PostgreSQL</productname>
    is already available or whether you can use it for your
    experimentation then you can install it yourself.  Doing so is not
    hard and it can be a good exercise.
    <productname>PostgreSQL</productname> can be installed by any
    unprivileged user; no superuser (<systemitem>root</systemitem>)
    access is required.
   </para>
-->
<para>
如果你不清楚<productname>PostgreSQL</productname>是否已经安装，或者不知
道你能否用它做自己的实验，那么你可以自己安装。这么做并不难，并且是一次很
好的练习。<productname>PostgreSQL</productname>可以由任何非特权用户安装，
并不需要超级用户(<systemitem>root</systemitem>)的权限。
</para>
<!--
   <para>
    If you are installing <productname>PostgreSQL</productname>
    yourself, then refer to <xref linkend="installation">
    for instructions on installation, and return to
    this guide when the installation is complete.  Be sure to follow
    closely the section about setting up the appropriate environment
    variables.
   </para>
-->
<para>
如果你准备自己安装<productname>PostgreSQL</productname>，那么请参考
<xref linkend="installation">获取安装的有关信息，安装之后再回到这个
指导手册来。一定要记住要尽可能遵循有关设置合适的环境变量章节里的信息。
</para>
<!--
   <para>
    If your site administrator has not set things up in the default
    way, you might have some more work to do.  For example, if the
    database server machine is a remote machine, you will need to set
    the <envar>PGHOST</envar> environment variable to the name of the
    database server machine.  The environment variable
    <envar>PGPORT</envar> might also have to be set.  The bottom line is
    this: if you try to start an application program and it complains
    that it cannot connect to the database, you should consult your
    site administrator or, if that is you, the documentation to make
    sure that your environment is properly set up.  If you did not
    understand the preceding paragraph then read the next section.
   </para>
   -->
<para>
如果站点管理员没有按照缺省方式设置各项相关参数，那你还有点额外的活儿要干。
比如，如果数据库服务器机器是一个远程的机器，那你就需要把<envar>PGHOST</envar>
环境变量设置为数据库服务器那台机器的名字。环境变量<envar>PGPORT</envar>也可能
需要设置。最后一招：如果当你试着启动一个应用而该应用报告说不能与数据库建立连
接时，你应该马上与数据库管理员联系，如果你就是管理员，那么你就要参考文档以确
保环境变量被正确的设置了。如果你不理解随后的几段，那么先阅读下一章。
</para>  
  </sect1>


  <sect1 id="tutorial-arch">
  <!--
   <title>Architectural Fundamentals</title>
-->
<title>体系基本概念</title>
<!--
   <para>
    Before we proceed, you should understand the basic
    <productname>PostgreSQL</productname> system architecture.
    Understanding how the parts of
    <productname>PostgreSQL</productname> interact will make this
    chapter somewhat clearer.
   </para>
-->
<para>
在我们开始讲解之前，我们应该先了解<productname>PostgreSQL</productname>
系统的基本体系。理解<productname>PostgreSQL</productname>的组件之间的相
互关系将会使本节显得更清晰一些。
</para>
<!--
   <para>
    In database jargon, <productname>PostgreSQL</productname> uses a
    client/server model.  A <productname>PostgreSQL</productname>
    session consists of the following cooperating processes
    (programs):
-->
<para>
按照数据库术语来说，<productname>PostgreSQL</productname>使用一种客户端/服务器
的模式。一次<productname>PostgreSQL</productname>会话由下列相关的进程(程序)组成：


    <itemizedlist>
     <listitem>
 <!--
      <para>
       A server process, which manages the database files, accepts
       connections to the database from client applications, and
       performs database actions on behalf of the clients.  The
       database server program is called
       <filename>postgres</filename>.
       <indexterm><primary>postgres</primary></indexterm>
      </para>
  -->
<para>
一个服务器进程，它管理数据库文件，接受来自客户端应用与数据库的连接，并且代表客
户端在数据库上执行操作。数据库服务器程序叫<filename>postgres</filename>。
<indexterm><primary>postgres</primary></indexterm>
</para>
     </listitem>
     <listitem>
 <!--
      <para>
       The user's client (frontend) application that wants to perform
       database operations.  Client applications can be very diverse
       in nature:  a client could be a text-oriented tool, a graphical
       application, a web server that accesses the database to
       display web pages, or a specialized database maintenance tool.
       Some client applications are supplied with the
       <productname>PostgreSQL</productname> distribution; most are
       developed by users.
      </para>
  -->
<para>
那些需要执行数据库操作的用户的客户端(前端)应用。客户端应用可能本身就是
多种多样的：它们可以是一个字符界面的工具，也可以是一个图形界面的应用，
或者是一个通过访问数据库来显示网页的 web 服务器，或者是一个特殊的数据库
管理工具。一些客户端应用是和<productname>PostgreSQL</productname>发布一
起提供的，但绝大部分是用户开发的。
</para>
     </listitem>

    </itemizedlist>
   </para>
<!--
   <para>
    As is typical of client/server applications, the client and the
    server can be on different hosts.  In that case they communicate
    over a TCP/IP network connection.  You should keep this in mind,
    because the files that can be accessed on a client machine might
    not be accessible (or might only be accessible using a different
    file name) on the database server machine.
   </para>
-->
<para>
和典型的客户端/服务器应用(C/S应用)一样，这些客户端和服务器可以在不同
的主机上。这时它们通过 TCP/IP 网络连接通讯。你应该记住的是，在客户机
上可以访问的文件未必能够在数据库服务器机器上访问(或者只能用不同的文件
名进行访问)。
</para>
<!--
   <para>
    The <productname>PostgreSQL</productname> server can handle
    multiple concurrent connections from clients.  To achieve this it
    starts (<quote>forks</quote>) a new process for each connection.
    From that point on, the client and the new server process
    communicate without intervention by the original
    <filename>postgres</filename> process.  Thus, the
    master server process is always running, waiting for
    client connections, whereas client and associated server processes
    come and go.  (All of this is of course invisible to the user.  We
    only mention it here for completeness.)
   </para>
   -->
<para>
<productname>PostgreSQL</productname>服务器可以处理来自客户端的多个并发连接。
因此，它为每个连接启动(<quote>forks</quote>)一个新的进程。从这个时候开始，客户端和新服务
器进程就不再经过最初的<filename>postgres</filename>进程进行通讯。因此，主服务器总是在运行，等
待客户端连接，而客户端及其相关联的服务器进程则是起起停停。（当然，用户是肯定看不到
这些事情的。我们在这儿谈这些主要是为了完整。）
</para>
</sect1>


  <sect1 id="tutorial-createdb">
  <!--
   <title>Creating a Database</title>
-->
<title>创建一个数据库</title>
   <indexterm zone="tutorial-createdb">
<!-- 
    <primary>database</primary>
    <secondary>creating</secondary> 
-->
    <primary>数据库</primary>
    <secondary>创建</secondary>
   </indexterm>

   <indexterm zone="tutorial-createdb">
    <primary>createdb</primary>
   </indexterm>
<!--
   <para>
    The first test to see whether you can access the database server
    is to try to create a database.  A running
    <productname>PostgreSQL</productname> server can manage many
    databases.  Typically, a separate database is used for each
    project or for each user.
   </para>
-->
<para>
看看你能否访问数据库服务器的第一个例子就是试着创建一个数据库。一台运行着
的<productname>PostgreSQL</productname>服务器可以管理许多数据库。通常我们
会为每个项目和每个用户单独使用一个数据库。
</para>
<!--
   <para>
    Possibly, your site administrator has already created a database
    for your use.  He should have told you what the name of your
    database is.  In that case you can omit this step and skip ahead
    to the next section.
   </para>
-->
<para>
站点管理员可能已经为你创建了可以使用的数据库。他应该已经告诉你这个数据库的
名字。如果这样你就可以省略这一步，并且跳到下一节。
</para>
<!--
   <para>
    To create a new database, in this example named
    <literal>mydb</literal>, you use the following command:
-->
<para>
要创建一个新的数据库，在我们这个例子里叫<literal>mydb</literal>，你可以使用下面的命令：

<screen>
<prompt>$</prompt> <userinput>createdb mydb</userinput>
</screen>
<!--
    If this produces no response then this step was successful and you can skip over the
    remainder of this section.
-->
如果不报错那么这一步就成功了，你就可以忽略本节余下的部分了。
   </para>

   <para>
   <!--
    If you see a message similar to:
-->
如果你看到类似下面这样的信息：

<screen>
createdb: command not found
</screen>
<!--
    then <productname>PostgreSQL</> was not installed properly.  Either it was not
    installed at all or your shell's search path was not set to include it.
    Try calling the command with an absolute path instead:
-->
那么就是<productname>PostgreSQL</>没有安装好：要么是就根本没装上、要么是搜索路径没有包含它。
尝试用绝对路径调用该命令试试：
<screen>
<prompt>$</prompt> <userinput>/usr/local/pgsql/bin/createdb mydb</userinput>
</screen>
<!--
    The path at your site might be different.  Contact your site
    administrator or check the installation instructions to
    correct the situation.
-->
在你的节点上这个路径可能不一样。请和管理员联系或者看看安装指导以获取正确的位置。
   </para>
<!--
   <para>
    Another response could be this:
-->
<para>
另外一种响应可能是这样：
<screen>
createdb: could not connect to database postgres: could not connect to server: No such file or directory
        Is the server running locally and accepting
        connections on Unix domain socket "/tmp/.s.PGSQL.5432"?
</screen>
<!--
    This means that the server was not started, or it was not started
    where <command>createdb</command> expected it.  Again, check the
    installation instructions or consult the administrator.
-->
这意味着服务器没有启动，或者没有在<command>createdb</command>预期的地方启动。同样，
你也要检查安装指导或者找管理员。
   </para>

   <para>
   <!--
    Another response could be this:
-->
另外一个响应可能是这样：
<screen>
createdb: could not connect to database postgres: FATAL:  role "joe" does not exist
</screen>
<!--
    where your own login name is mentioned.  This will happen if the
    administrator has not created a <productname>PostgreSQL</> user account
    for you.  (<productname>PostgreSQL</> user accounts are distinct from
    operating system user accounts.)  If you are the administrator, see
    <xref linkend="user-manag"> for help creating accounts.  You will need to
    become the operating system user under which <productname>PostgreSQL</>
    was installed (usually <literal>postgres</>) to create the first user
    account.  It could also be that you were assigned a
    <productname>PostgreSQL</> user name that is different from your
    operating system user name; in that case you need to use the <option>-U</>
    switch or set the <envar>PGUSER</> environment variable to specify your
    <productname>PostgreSQL</> user name.
-->
在这里提到了你自己的登陆名。如果管理员没有为你创建<productname>PostgreSQL</>
用户帐号，就会发生这些现像。<productname>PostgreSQL</>用户帐号和操作系统用户帐
号是不同的。如果你就是管理员，参阅<xref linkend="user-manag">以获取创建用户帐号
的帮助。你需要变成安装<productname>PostgreSQL</>的操作系统用户的身份(通常
是<literal>postgres</>)才能创建第一个用户帐号。也有可能是赋予<productname>PostgreSQL</>
用户名和操作系统用户名不同；这种情况下，你需要使用<option>-U</>开关或者使用
<envar>PGUSER</>环境变量声明<productname>PostgreSQL</>用户名。
   </para>

   <para>
   <!--
    If you have a user account but it does not have the privileges required to
    create a database, you will see the following:
-->
如果你有个数据库用户帐号，但是没有创建数据库所需要的权限，那么你会看到下面的东西：
<screen>
createdb: database creation failed: ERROR:  permission denied to create database
</screen>
<!--
    Not every user has authorization to create new databases.  If
    <productname>PostgreSQL</productname> refuses to create databases
    for you then the site administrator needs to grant you permission
    to create databases.  Consult your site administrator if this
    occurs.  If you installed <productname>PostgreSQL</productname>
    yourself then you should log in for the purposes of this tutorial
    under the user account that you started the server as.
-->
并非所有用户都经过了创建新数据库的授权。如果<productname>PostgreSQL</productname>
拒绝为你创建数据库，那么你需要让站点管理员赋予你创建数据库的权限。出现这种情况时
请咨询你的站点管理员。如果你自己安装了<productname>PostgreSQL</productname>，那么
你应该以你启动数据库服务器的用户身份登陆然后参考手册完成权限的赋予工作。
    <footnote>
<!--
     <para>
      As an explanation for why this works:
      <productname>PostgreSQL</productname> user names are separate
      from operating system user accounts.  When you connect to a
      database, you can choose what
      <productname>PostgreSQL</productname> user name to connect as;
      if you don't, it will default to the same name as your current
      operating system account.  As it happens, there will always be a
      <productname>PostgreSQL</productname> user account that has the
      same name as the operating system user that started the server,
      and it also happens that that user always has permission to
      create databases.  Instead of logging in as that user you can
      also specify the <option>-U</option> option everywhere to select
      a <productname>PostgreSQL</productname> user name to connect as.
     </para>
 -->
<para>
为什么这么干就行了? 解释如下：<productname>PostgreSQL</productname>用户名
是和操作系统用户账号分开的。如果你与一个数据库连接，你可以指定以哪个
<productname>PostgreSQL</productname>用户名进行连接；如果你不指定，那么缺省
就是你当前的操作系统账号。如果这样，那么总有一个与操作系统用户同名的
<productname>PostgreSQL</productname>用户账号用于启动服务器，并且通常这个用
户都有创建数据库的权限。如果你不想以该用户身份登陆，那么你也可以在任何地方
声明一个<option>-U</option>选项来选择一个连接时使用的<productname>PostgreSQL</productname>用户名。
</para>
    </footnote>
   </para>
<!--
   <para>
    You can also create databases with other names.
    <productname>PostgreSQL</productname> allows you to create any
    number of databases at a given site.  Database names must have an
    alphabetic first character and are limited to 63 bytes in
    length.  A convenient choice is to create a database with the same
    name as your current user name.  Many tools assume that database
    name as the default, so it can save you some typing.  To create
    that database, simply type:
-->
<para>
你还可以用其它名字创建数据库。<productname>PostgreSQL</productname>允许你在
一个节点上创建任意数量的数据库。数据库名必须是以字母开头并且小于 63 个字节
长。一个方便的做法是创建和你当前用户名同名的数据库。许多工具假设它为缺省的
数据库名，所以这样可以节省敲键。要创建这样的数据库，只需要键入：
<screen>
<prompt>$</prompt> <userinput>createdb</userinput>
</screen>
   </para>
<!--
   <para>
    If you do not want to use your database anymore you can remove it.
    For example, if you are the owner (creator) of the database
    <literal>mydb</literal>, you can destroy it using the following
    command:
-->
 <para>
如果你再也不想使用你的数据库了，那么你可以删除它。比如，如果你是数据库
<literal>mydb</literal>的属主(创建人)，那么你就可以用下面的命令删除它：
<screen>
<prompt>$</prompt> <userinput>dropdb mydb</userinput>
</screen>
<!--
    (For this command, the database name does not default to the user
    account name.  You always need to specify it.)  This action
    physically removes all files associated with the database and
    cannot be undone, so this should only be done with a great deal of
    forethought.
-->
对于这条命令而言，数据库名不是缺省的用户名，你必须明确声明它。这个动作物理
上将所有与该数据库相关的文件都删除并且不可恢复，因此做这件事之前一定要想清楚。
   </para>
<!--
   <para>
    More about <command>createdb</command> and <command>dropdb</command> can
    be found in <xref linkend="APP-CREATEDB"> and <xref linkend="APP-DROPDB">
    respectively.
   </para>
   -->
 <para>
 更多关于<command>createdb</command>和<command>dropdb</command>的信息可以在 
 <xref linkend="APP-CREATEDB">和<xref linkend="APP-DROPDB">小节找到。
 </para>
  </sect1>


  <sect1 id="tutorial-accessdb">
 <!-- 
   <title>Accessing a Database</title>
-->
<title>访问数据库</title>
   <indexterm zone="tutorial-accessdb">
    <primary>psql</primary>
   </indexterm>

   <para>
   <!-- 
    Once you have created a database, you can access it by:
-->
一旦创建了数据库，你就可以访问它：

    <itemizedlist spacing="compact" mark="bullet">
     <listitem>
 <!-- 
      <para>
       Running the <productname>PostgreSQL</productname> interactive
       terminal program, called <application><firstterm>psql</></application>, which allows you
       to interactively enter, edit, and execute
       <acronym>SQL</acronym> commands.
      </para>
  -->
  <para>
  运行<productname>PostgreSQL</productname>交互的终端程序<application><firstterm>psql</></application>，
  它允许你交互地输入、编辑、执行<acronym>SQL</acronym>命令。
  </para>
     </listitem>

     <listitem>
 <!--
      <para>
       Using an existing graphical frontend tool like
       <application>pgAdmin</application> or an office suite with
       <acronym>ODBC</> or <acronym>JDBC</> support to create and manipulate a
       database.  These possibilities are not covered in this
       tutorial.
      </para>
  -->
  <para> 
  使用我们现有的图形前端工具，比如<application>pgAdmin</application>或者
  带<acronym>ODBC</> 或 <acronym>JDBC</>支持的办公套件来创建和管理数据库。
  这种方法在这份教程中没有介绍。
  </para>
     </listitem>

     <listitem>
 <!--
      <para>
       Writing a custom application, using one of the several
       available language bindings.  These possibilities are discussed
       further in <xref linkend="client-interfaces">.
      </para>
   -->
  <para> 
  使用多种语言绑定中的一种写一个客户应用。这些可能性在
  <xref linkend="client-interfaces">中有更深入的讨论。
  </para>
     </listitem>
    </itemizedlist>
<!--
    You probably want to start up <command>psql</command> to try
    the examples in this tutorial.  It can be activated for the
    <literal>mydb</literal> database by typing the command:
-->
你可能需要启动<command>psql</command>来试验本教程中的例子。你可以用
下面的命令为<literal>mydb</literal>数据库激活它：
<screen>
<prompt>$</prompt> <userinput>psql mydb</userinput>
</screen>
<!--
    If you do not supply the database name then it will default to your
    user account name.  You already discovered this scheme in the
    previous section using <command>createdb</command>.
-->
如果你省略了数据库名字，那么它缺省就是你的用户账号名字。你已经在前面的
使用<command>createdb</command>小节里了解这一点了。
   </para>
<!--
   <para>
    In <command>psql</command>, you will be greeted with the following
    message:
-->
<para>
在<command>psql</command>里，你会看到下面的欢迎信息：
<screen>
psql (&version;)
Type "help" for help.

mydb=&gt;
</screen>
    <indexterm><primary>superuser</primary></indexterm>
<!--
    The last line could also be:
-->
最后一行也可能是
<screen>
mydb=#
</screen>
<!--
    That would mean you are a database superuser, which is most likely
    the case if you installed <productname>PostgreSQL</productname>
    yourself.  Being a superuser means that you are not subject to
    access controls.  For the purposes of this tutorial that is not
    important.
-->
这个提示符意味着你是数据库超级用户，最可能出现在你自己安装了
<productname>PostgreSQL</productname>的情况下。作为超级用户意味着你
不受访问控制的限制。对于本教程的目的而言，是否超级用户并不重要。

   </para>
<!--
   <para>
    If you encounter problems starting <command>psql</command>
    then go back to the previous section.  The diagnostics of
    <command>createdb</command> and <command>psql</command> are
    similar, and if the former worked the latter should work as well.
   </para>
-->
<para>
如果你启动<command>psql</command>时碰到了问题，那么回到前面的小节。诊断
 <command>createdb</command>的方法和诊断<command>psql</command>的方法很类
 似，如果前者能运行那么后者也应该能运行。
</para>
<!--
   <para>
    The last line printed out by <command>psql</command> is the
    prompt, and it indicates that <command>psql</command> is listening
    to you and that you can type <acronym>SQL</acronym> queries into a
    work space maintained by <command>psql</command>.  Try out these
    commands:
-->
<para>
<command>psql</command>打印出的最后一行是提示符，它表示<command>psql</command>
正听着你说话，这个时候你就可以敲入<acronym>SQL</acronym>查询到一个
<command>psql</command>维护的工作区中。尝试一下下面的命令：
    <indexterm><primary>version</primary></indexterm>
<screen>
<prompt>mydb=&gt;</prompt> <userinput>SELECT version();</userinput>
                               version
 -----------------------------------------------------------------------


 PostgreSQL &version; on i586-pc-linux-gnu, compiled by GCC 2.96, 32-bit
(1 row)

<prompt>mydb=&gt;</prompt> <userinput>SELECT current_date;</userinput>
    date
------------
 2002-08-31
(1 row)

<prompt>mydb=&gt;</prompt> <userinput>SELECT 2 + 2;</userinput>
 ?column?
----------
        4
(1 row)
</screen>
   </para>
<!--
   <para>
    The <command>psql</command> program has a number of internal
    commands that are not SQL commands.  They begin with the backslash
    character, <quote><literal>\</literal></quote>.
    For example,
    you can get help on the syntax of various
    <productname>PostgreSQL</productname> <acronym>SQL</acronym>
    commands by typing:
-->
<para>
<command>psql</command>程序有一些不属于 SQL 命令的内部命令。它们以反斜杠
<quote><literal>\</literal></quote>开头。比如，你可以用下面的命令获取各
种<productname>PostgreSQL</productname> <acronym>SQL</acronym>命令的帮助语法：

<screen>
<prompt>mydb=&gt;</prompt> <userinput>\h</userinput>
</screen>
   </para>

   <para>
   <!--
    To get out of <command>psql</command>, type:
-->
要退出<command>psql</command>，键入：
<screen>
<prompt>mydb=&gt;</prompt> <userinput>\q</userinput>
</screen>
<!--
    and <command>psql</command> will quit and return you to your
    command shell. (For more internal commands, type
    <literal>\?</literal> at the <command>psql</command> prompt.)  The
    full capabilities of <command>psql</command> are documented in
    <xref linkend="app-psql">.  In this tutorial we will not use these
    features explicitly, but you can use them yourself when it is helpful.
-->
然后<command>psql</command>就会退出并且返回到命令行 shell(要获取更多有关
内部命令的信息，你可以在<command>psql</command>提示符上键入<literal>\?</literal>)。
<command>psql</command>的完整功能在<xref linkend="app-psql">文档中。在这份文档里，
我们将不会明确使用这些特性，但是你自己可以在它们有用的时候使用它们。
   </para>

  </sect1>
 </chapter>
