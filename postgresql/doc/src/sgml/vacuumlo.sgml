<!-- doc/src/sgml/vacuumlo.sgml -->

<refentry id="vacuumlo">
 <refmeta>
  <refentrytitle><application>vacuumlo</application></refentrytitle>
  <manvolnum>1</manvolnum>
  <refmiscinfo>Application</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>vacuumlo</refname>
  <refpurpose>从 <productname>PostgreSQL</productname> 数据库移除孤立的大对象</refpurpose>
 </refnamediv>

 <indexterm zone="vacuumlo">
  <primary>vacuumlo</primary>
 </indexterm>

 <refsynopsisdiv>
  <cmdsynopsis>
   <command>vacuumlo</command>
   <arg choice="opt" rep="repeat"><replaceable>option</replaceable></arg>
   <arg choice="plain" rep="repeat"><replaceable>dbname</replaceable></arg>
  </cmdsynopsis>
 </refsynopsisdiv>

 <refsect1>
<!--
 <title>Description</title>
-->
  <title>描述</title>

<!--
 <para>
 <application>vacuumlo</> is a simple utility program that will remove any
 <quote>orphaned</> large objects from a
 <productname>PostgreSQL</> database. An orphaned large object (LO) is
 considered to be any LO whose OID does not appear in any <type>oid</> or
 <type>lo</> data column of the database.
 </para>
-->
 <para>
  <application>vacuumlo</> 是一个
  <quote>会</> 从
  <productname>PostgreSQL</> 数据库移除所有孤立的大对象的简单程序.  一个大对象(LO)被认为是OID不在任何数据库的数据列的 <type>oid</> 或者or
  <type>lo</> 中的LO.
 </para>

<!--
 <para>
  If you use this, you may also be interested in the <function>lo_manage</>
  trigger in the <xref linkend="lo"> module.
  <function>lo_manage</> is useful to try
  to avoid creating orphaned LOs in the first place.
 </para>
-->
 <para>
  当摸使用它, 你可能会对 <xref linkend="lo"> 模块中的<function>lo_manage</>触发器感兴趣.
  <function>lo_manage</> 在一开始尝试避免创造孤立的LOs是非常有用的.
 </para>

<!--
  <para>
   All databases named on the command line are processed.
  </para>
 </refsect1>
-->
  <para>
   命令行中出现的数据库都是处理过的.
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>Options</title>
-->
  <title>选项</title>

  <para>
  <!--
   <application>vacuumlo</application> accepts the following command-line arguments:
  -->
   <application>vacuumlo</application> 接受下面的命令行参数:

  <variablelist>
   <varlistentry>
   <!--
    <term><option>-l</option> <replaceable>limit</></term>
   -->
    <term><option>-l</option> <replaceable>限制</></term>
    <listitem>
    <!--
     <para>
      Remove no more than <replaceable>limit</> large objects per
      transaction (default 1000).  Since the server acquires a lock per LO
      removed, removing too many LOs in one transaction risks exceeding
      <xref linkend="guc-max-locks-per-transaction">.  Set the limit to
      zero if you want all removals done in a single transaction.
     </para>
    -->
     <para>
      每个事务移除不超过 <replaceable>限制</> 数量的大对象 (默认 1000).  如果服务每移除一个LO就获得一个锁, 在一个事务中移除太多的LOs是非常危险的
      <xref linkend="guc-max-locks-per-transaction">.  如果你想要所有移除在一个单独的事务设置限制为0.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><option>-n</option></term>
    <!--
    <listitem>
     <para>Don't remove anything, just show what would be done.</para>
    </listitem>
    -->
    <listitem>
     <para>不移除任何东西,只是显示什么将要被执行.</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><option>-v</option></term>
    <!--
    <listitem>
     <para>Write a lot of progress messages.</para>
    </listitem>
    -->
    <listitem>
     <para>输出一系列的进度信息.</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><option>-V</></term>
    <term><option>--version</></term>
    <listitem>
     <!--
     <para>
      Print the <application>vacuumlo</application> version and exit.
     </para>
     -->
     <para>
      打印 <application>vacuumlo</application> 版本并且退出.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><option>-?</></term>
    <term><option>--help</></term>
    <listitem>
     <!--
     <para>
      Show help about <application>vacuumlo</application> command line
      arguments, and exit.
     </para>
     -->
     <para>
      显示 <application>vacuumlo</application> 的命令行参数, 并且退出.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
  </para>

  <para>
  <!--
   <application>vacuumlo</application> also accepts the following command-line
   arguments for connection parameters:
  -->
   <application>vacuumlo</application> 也接受下面的命令行参数作为连接参:

  <variablelist>
   <varlistentry>
   <!--
    <term><option>-h</option> <replaceable>hostname</></term>
   -->
    <term><option>-h</option> <replaceable>主机名</></term>
    <listitem>
    <!--
     <para>Database server's host.</para>
    -->
     <para>数据库服务器的主机.</para>
    </listitem>
   </varlistentry>

   <varlistentry>
   <!--
    <term><option>-p</option> <replaceable>port</></term>
   -->
    <term><option>-p</option> <replaceable>端口</></term>
    <listitem>
    <!--
     <para>Database server's port.</para>
    -->
     <para>数据库服务器的端口.</para>
    </listitem>
   </varlistentry>

   <varlistentry>
   <!--
    <term><option>-U</option> <replaceable>username</></term>
   -->
    <term><option>-U</option> <replaceable>用户名</></term>
    <listitem>
    <!--
     <para>User name to connect as.</para>
    -->
     <para>作为连接服务器的用户名.</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><option>-w</></term>
    <term><option>--no-password</></term>
    <listitem>
    <!--
     <para>
      Never issue a password prompt.  If the server requires password
      authentication and a password is not available by other means
      such as a <filename>.pgpass</filename> file, the connection
      attempt will fail.  This option can be useful in batch jobs and
      scripts where no user is present to enter a password.
     </para>
    -->
     <para>
      从来不发出密码提示.  如果服务器要求密码认证并且通过其他方法比如<filename>.pgpass</filename> 文件中不能获取, 连接尝试将会失败.  在批处理任务或脚本中没有用户输入密码的时候这个选项将会变得很有用.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><option>-W</option></term>
    <listitem>
    <!--
     <para>
      Force <application>vacuumlo</application> to prompt for a
      password before connecting to a database.
     </para>
    -->
     <para>
      在连接数据库之前强制 <application>vacuumlo</application> 提示密码输入.
     </para>

    <!--
     <para>
      This option is never essential, since
      <application>vacuumlo</application> will automatically prompt
      for a password if the server demands password authentication.
      However, <application>vacuumlo</application> will waste a
      connection attempt finding out that the server wants a password.
      In some cases it is worth typing <option>-W</> to avoid the extra
      connection attempt.
     </para>
    -->
     <para>
      这个选项不是必要的, 因为
      <application>vacuumlo</application> 将会自动的提示密码输入如果服务器需要密码认证的话.
      然而, <application>vacuumlo</application> 将会浪费一个连接尝试去找出服务器是否需要密码.
      在某些情况下使用<option>-W</>选项来避免额外的连接尝试是值得的.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
  </para>
 </refsect1>

 <refsect1>
 <!--
  <title>Notes</title>
 -->
  <title>说明</title>

 <!--
  <para>
   <application>vacuumlo</application> works by the following method:
   First, <application>vacuumlo</> builds a temporary table which contains all
   of the OIDs of the large objects in the selected database.  It then scans
   through all columns in the database that are of type
   <type>oid</> or <type>lo</>, and removes matching entries from the temporary
   table.  (Note: Only types with these names are considered; in particular,
   domains over them are not considered.)  The remaining entries in the
   temporary table identify orphaned LOs.  These are removed.
  </para>
 -->
  <para>
   <application>vacuumlo</application> 以下面的方法工作:
   首先, <application>vacuumlo</> 创建一个包含所有选择数据库的大对象OIDs的临时表.  然后扫描数据库中是
   <type>oid</> 或者 <type>lo</>类型的所有列, 然后从临时表中移除匹配的记录. 
   (注意: 只有这些名字的类型才被考虑; 特别是,
   超过它们范围的不被考虑.)  临时表中剩下的记录被认证维LOs对象.它们将会被移除.
  </para>
 </refsect1>

 <refsect1>
 <!--
  <title>Author</title>
 -->
  <title>作者</title>

  <para>
   Peter Mount <email>peter@retep.org.uk</email>
  </para>
 </refsect1>

</refentry>