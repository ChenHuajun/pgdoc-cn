<!-- doc/src/sgml/earthdistance.sgml -->

<sect1 id="earthdistance" xreflabel="earthdistance">
 <title>earthdistance</title>

 <indexterm zone="earthdistance">
  <primary>earthdistance</primary>
 </indexterm>

 <!--
<para>
  The <filename>earthdistance</> module provides two different approaches to
  calculating great circle distances on the surface of the Earth. The one
  described first depends on the <filename>cube</> module (which
  <emphasis>must</> be installed before <filename>earthdistance</> can be
  installed). The second one is based on the built-in <type>point</> data type,
  using longitude and latitude for the coordinates.
 </para>
-->
<para>
<filename>earthdistance</>模块提供两个不同的方法计算地球表面上的大圆弧距离。
描述的第一个依赖于<filename>cube</>模块（<emphasis>必须</>在<filename>earthdistance</>
可以安装之前安装）。第二个基于内建的<type>point</>数据类型，
使用经线和纬线作为坐标。
</para>

 <!--
<para>
  In this module, the Earth is assumed to be perfectly spherical.
  (If that's too inaccurate for you, you might want to look at the
  <application><ulink url="http://www.postgis.org/">PostGIS</ulink></>
  project.)
 </para>
-->
<para>
在这个模块，假设地球为完美的球形。（如果对你来说太不准确，你可能想查阅
<application><ulink url="http://www.postgis.org/">PostGIS</ulink></>项目。）
</para>

 <sect2>
  <!-- 
  <title>Cube-based Earth Distances</title> 
  -->
  <title>基于立方体的地球距离</title>

  <!--
<para>
   Data is stored in cubes that are points (both corners are the same) using 3
   coordinates representing the x, y, and z distance from the center of the
   Earth.  A domain <type>earth</> over <type>cube</> is provided, which
   includes constraint checks that the value meets these restrictions and
   is reasonably close to the actual surface of the Earth.
  </para>
-->
<para>
数据存储在立方体中，点用3个坐标表示从地球中心到表面的x, y, z的距离。
提供一个在<type>cube</>之上的域<type>earth</>，包含检查约束，
值必须符合限制条件并且合理的接近地球的实际表面。
</para>

  <!--
<para>
   The radius of the Earth is obtained from the <function>earth()</>
   function. It is given in meters. But by changing this one function you can
   change the module to use some other units, or to use a different value of
   the radius that you feel is more appropriate.
  </para>
-->
<para>
地球的半径从<function>earth()</>函数获得。以米给出。
可以通过改变模块使用其他单元来改变这个函数，或者使用你觉得更合适的半径值。
</para>

  <!--
<para>
   This package has applications to astronomical databases as well.
   Astronomers will probably want to change <function>earth()</> to return a
   radius of <literal>180/pi()</> so that distances are in degrees.
  </para>
-->
<para>
这个包也应用到了天文数据库。天文学家可能想要改变<function>earth()</>，
使其返回一个<literal>180/pi()</>的半径，这样距离可以用角度表示。
</para>

  <!--
<para>
   Functions are provided to support input in latitude and longitude (in
   degrees), to support output of latitude and longitude, to calculate
   the great circle distance between two points and to easily specify a
   bounding box usable for index searches.
  </para>
-->
<para>
提供函数支持经纬度（以角度方式）输入、输出、计算两个点之间大圆弧的距离，
和容易的指定用于索引查询的边界框。
</para>

  <!--
<para>
   The provided functions are shown
   in <xref linkend="earthdistance-cube-functions">.
  </para>
-->
<para>
提供的函数在<xref linkend="earthdistance-cube-functions">里显示。
</para>

  <table id="earthdistance-cube-functions">
   <!-- 
   <title>Cube-based Earthdistance Functions</title> 
   -->
   <title>基于立方体的地球距离函数</title>
   <tgroup cols="3">
    <thead>
     <row>
      <!-- 
  <entry>Function</entry>
      <entry>Returns</entry>
      <entry>Description</entry> 
  -->
  <entry>函数</entry>
      <entry>返回</entry>
      <entry>描述</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry><function>earth()</function><indexterm><primary>earth</primary></indexterm></entry>
      <entry><type>float8</type></entry>
      <!-- 
  <entry>Returns the assumed radius of the Earth.</entry> 
  -->
  <entry>返回地球的假设半径。</entry>
     </row>
     <row>
      <entry><function>sec_to_gc(float8)</function><indexterm><primary>sec_to_gc</primary></indexterm></entry>
      <entry><type>float8</type></entry>
      <!-- 
  <entry>Converts the normal straight line
       (secant) distance between two points on the surface of the Earth
       to the great circle distance between them.
      </entry> 
  -->
  <entry>
  将地球表面两点之间正常的直线（割线）距离转换为大圆弧的距离。
      </entry>
     </row>
     <row>
      <entry><function>gc_to_sec(float8)</function><indexterm><primary>gc_to_sec</primary></indexterm></entry>
      <entry><type>float8</type></entry>
      <!-- 
  <entry>Converts the great circle distance between two points on the
       surface of the Earth to the normal straight line (secant) distance
       between them.
      </entry> 
  -->
  <entry>
  将地球表面两点之间的大圆弧的距离转换为正常的直线（割线）距离。
      </entry>
     </row>
     <row>
      <entry><function>ll_to_earth(float8, float8)</function><indexterm><primary>ll_to_earth</primary></indexterm></entry>
      <entry><type>earth</type></entry>
      <!-- 
  <entry>Returns the location of a point on the surface of the Earth given
       its latitude (argument 1) and longitude (argument 2) in degrees.
      </entry> 
  -->
  <entry>
  以角度形式返回给定纬度（参数 1）和经度（参数 2）的地球表面点的位置。
      </entry>
     </row>
     <row>
      <entry><function>latitude(earth)</function><indexterm><primary>latitude</primary></indexterm></entry>
      <entry><type>float8</type></entry>
      <!-- 
  <entry>Returns the latitude in degrees of a point on the surface of the
       Earth.
      </entry> 
  -->
  <entry>
  以角度形式返回地球表面一个点的纬度。
      </entry>
     </row>
     <row>
      <entry><function>longitude(earth)</function><indexterm><primary>longitude</primary></indexterm></entry>
      <entry><type>float8</type></entry>
      <!-- 
  <entry>Returns the longitude in degrees of a point on the surface of the
       Earth.
      </entry> 
  -->
  <entry>
  以角度形式返回地球表面一个点的经度。
      </entry>
     </row>
     <row>
      <entry><function>earth_distance(earth, earth)</function><indexterm><primary>earth_distance</primary></indexterm></entry>
      <entry><type>float8</type></entry>
      <!-- 
  <entry>Returns the great circle distance between two points on the
       surface of the Earth.
      </entry> 
  -->
  <entry>
  返回地球表面两点之间的大圆弧距离。
      </entry>
     </row>
     <row>
      <entry><function>earth_box(earth, float8)</function><indexterm><primary>earth_box</primary></indexterm></entry>
      <entry><type>cube</type></entry>
      <!-- 
  <entry>Returns a box suitable for an indexed search using the cube
       <literal>@&gt;</>
       operator for points within a given great circle distance of a location.
       Some points in this box are further than the specified great circle
       distance from the location, so a second check using
       <function>earth_distance</> should be included in the query.
      </entry> 
  -->
  <entry>
  返回一个适合于索引搜索的立方体，该立方体在一个给定位置的大圆弧距离里使用点的立方
  <literal>@&gt;</>操作符。在这个立方体中的某些点可能比指定的大圆弧距离的位置更远，
  所以使用<function>earth_distance</>的第二个检查应该包含在查询中。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>

 </sect2>

 <sect2>
  <!-- 
  <title>Point-based Earth Distances</title> 
  -->
  <title>基于点的地球距离</title>

  <!--
<para>
   The second part of the module relies on representing Earth locations as
   values of type <type>point</>, in which the first component is taken to
   represent longitude in degrees, and the second component is taken to
   represent latitude in degrees.  Points are taken as (longitude, latitude)
   and not vice versa because longitude is closer to the intuitive idea of
   x-axis and latitude to y-axis.
  </para>
-->
<para>
模块的第二部分依赖于用类型为<type>point</>的值表示地球距离，
这里第一个组成部分用来表示以角度表示的经度，第二个组成部分用来表示以角度表示的纬度。
点被当做是(经度, 纬度)并且反过来不行，因为经度为X轴纬度为Y轴。
</para>

  <!--
<para>
   A single operator is provided, shown
   in <xref linkend="earthdistance-point-operators">.
  </para>
-->
<para>
提供了一个操作符，在<xref linkend="earthdistance-point-operators">中显示。
</para>

  <table id="earthdistance-point-operators">
   <!-- 
   <title>Point-based Earthdistance Operators</title> 
   -->
   <title>基于点的地球距离操作符</title>
   <tgroup cols="3">
    <thead>
     <row>
      <!-- 
  <entry>Operator</entry>
      <entry>Returns</entry>
      <entry>Description</entry> 
  -->
  <entry>操作符</entry>
      <entry>返回</entry>
      <entry>描述</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry><type>point</> <literal>&lt;@&gt;</literal> <type>point</></entry>
      <entry><type>float8</type></entry>
      <!-- 
  <entry>Gives the distance in statute miles between
       two points on the Earth's surface.
      </entry> 
  -->
  <entry>
  给出地球表面两点之间的法定英里距离。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <!--
<para>
   Note that unlike the <type>cube</>-based part of the module, units
   are hardwired here: changing the <function>earth()</> function will
   not affect the results of this operator.
  </para>
-->
<para>
请注意，不像基于<type>cube</>部分的模块，这里的单元是硬链接的：
改变<function>earth()</>函数将不会影响这个操作符的结果。
</para>

  <!--
<para>
   One disadvantage of the longitude/latitude representation is that
   you need to be careful about the edge conditions near the poles
   and near +/- 180 degrees of longitude.  The <type>cube</>-based
   representation avoids these discontinuities.
  </para>
-->
<para>
经度/纬度表示法的一个缺点是：你必须注意靠近两极和接近+/- 180度经线的边界条件。
基于<type>cube</>的表示法避免了这些间断点。
</para>

 </sect2>

</sect1>
