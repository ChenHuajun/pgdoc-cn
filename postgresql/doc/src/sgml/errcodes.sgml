<!-- doc/src/sgml/errcodes.sgml -->

<appendix id="errcodes-appendix">
 <!-- <title><productname>PostgreSQL</productname> Error Codes</title> -->
<title><productname>PostgreSQL</productname> 错误代码</title>

 <indexterm zone="errcodes-appendix">
  <primary>error codes</primary>
  <secondary>list of</secondary>
 </indexterm>

<!-- 
 <para>
  All messages emitted by the <productname>PostgreSQL</productname>
  server are assigned five-character error codes that follow the SQL
  standard's conventions for <quote>SQLSTATE</> codes.  Applications
  that need to know which error condition has occurred should usually
  test the error code, rather than looking at the textual error
  message.  The error codes are less likely to change across
  <productname>PostgreSQL</> releases, and also are not subject to
  change due to localization of error messages. Note that some, but
  not all, of the error codes produced by <productname>PostgreSQL</>
  are defined by the SQL standard; some additional error codes for
  conditions not defined by the standard have been invented or
  borrowed from other databases.
 </para>
 -->
<para>
<productname>PostgreSQL</productname>服务器发出的所有消息都赋予了五个字符的错误代码，
这些代码遵循 SQL 的<quote>SQLSTATE</>代码的习惯。
需要知道发生了什么错误条件的应用通常应该测试错误代码，而不是查看文本错误信息。
这些错误代码轻易不会随着<productname>PostgreSQL</>的版本更新而修改，
并且一般也不会随着错误信息的本地化而发生修改。请注意有些(但不是全部) 
<productname>PostgreSQL</>生成的错误代码是由 SQL 标准定义的；
有些标准没有定义的错误条件是发明的或者是从其它数据库借来的。
</para>
<!-- 
 <para>
  According to the standard, the first two characters of an error code
  denote a class of errors, while the last three characters indicate
  a specific condition within that class.  Thus, an application that
  does not recognize the specific error code might still be able to infer
  what to do from the error class.
 </para>
 -->
<para>
根据标准，错误代码的头两个字符表示错误类别，而后三个字符表示在该类别内特定的条件。
因此，那些不能识别特定错误代码的应用仍然可以从错误类别中推断要做什么。
</para>
<!-- 
 <para>
  <xref linkend="errcodes-table"> lists all the error codes defined in
  <productname>PostgreSQL</productname> &version;.  (Some are not actually
  used at present, but are defined by the SQL standard.)
  The error classes are also shown.  For each error class there is a
  <quote>standard</> error code having the last three characters
  <literal>000</>.  This code is used only for error conditions that fall
  within the class but do not have any more-specific code assigned.
 </para>
 -->
<para>
<xref linkend="errcodes-table">里面列出了<productname>PostgreSQL</productname> &version; 
定义的所有错误代码(有些实际上目前并没有使用，但是 SQL 标准定义了)。错误类别也列出在此。
对于每个错误类别都有个<quote>标准</>的错误代码，它的最后三个字符是<literal>000</>。
这个代码只用于那些落在该类别内，但是没有赋予任何更准确的代码的错误条件。
</para>

<!-- 
 <para>
  The symbol shown in the column <quote>Condition Name</quote> is
  the condition name to use in <application>PL/pgSQL</>.  Condition
  names can be written in either upper or lower case.  (Note that
  <application>PL/pgSQL</> does not recognize warning, as opposed to error,
  condition names; those are classes 00, 01, and 02.)
 </para>
 -->
<para>
<quote>条件名</quote>列显示的标志是在<application>PL/pgSQL</>里面使用的条件名。
条件名大小写无关。（请注意<application>PL/pgSQL</>并不识别警告，
这一点和错误、条件名正相反；那些是 00，01，02 类别。）
</para>


<!-- 
 <para>
  For some types of errors, the server reports the name of a database object
  (a table, table column, data type, or constraint) associated with the error;
  for example, the name of the unique constraint that caused a
  <symbol>unique_violation</> error.  Such names are supplied in separate
  fields of the error report message so that applications need not try to
  extract them from the possibly-localized human-readable text of the message.
  As of <productname>PostgreSQL</> 9.3, complete coverage for this feature
  exists only for errors in SQLSTATE class 23 (integrity constraint
  violation), but this is likely to be expanded in future.
 </para>
 -->
<para>
对于某些类型的错误，服务器报告与错误相关的数据库对象的名称（一个表，表字段，数据类型，
或者常量）；例如，唯一约束的名字导致了一个<symbol>unique_violation</>错误。
类似的名字在单独的错误报告字段信息中提供，
这样应用程序就不用尝试去从可能的本地化人可读的信息文本中提取它们。
自<productname>PostgreSQL</> 9.3起，对这个信息的完全覆盖只存在于SQLSTATE类23的错误中（完整性约束违反），
但这个可能在将来扩展。
</para>
<table id="errcodes-table">
 <!-- <title><productname>PostgreSQL</productname> Error Codes</title> -->
<title><productname>PostgreSQL</productname> 错误代码</title>

 <tgroup cols="2">
  <colspec colnum="1" colname="errorcode">
  <colspec colnum="2" colname="condname">
  <spanspec namest="errorcode" nameend="condname" spanname="span12">

  <thead>
   <row>
<!-- 
    <entry>Error Code</entry>
    <entry>Condition Name</entry> 
-->
    <entry>错误代码</entry>
<entry>条件名</entry> 
   </row>
  </thead>

  <tbody>

    &errcodes-table;

  </tbody>
 </tgroup>
</table>


</appendix>
